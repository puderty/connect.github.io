{"version":3,"file":"js/app.81f252c8.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink);\n                // openLinkBlank(standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, '');\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, '');\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.7.4';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)()) {\n        if (isTelegram) {\n            window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    if (!(0, utils_1.isIos)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n    }\n    else if (iosUseDeeplink) {\n        fallbackToDownloadPage = () => {\n            console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n            if (!deepLinkOpened) {\n                console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                window.open(fullUrl, '_self');\n            }\n        };\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        let count = 0;\n        let interval = setInterval(() => {\n            count++;\n            console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n            if (document.hidden) {\n                deepLinkOpened = true;\n            }\n            if (count > 10 || document.hidden) {\n                clearInterval(interval);\n                console.log(\"windowOpen :cleat: ${count}\");\n            }\n        }, 200);\n        window.addEventListener('blur', () => {\n            console.log(\"windowOpen :blur\");\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        if (connectRequest) {\n            var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n            return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n        else {\n            return getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            if (connectRequest) {\n                return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n            }\n            else {\n                return constants_1.shortUniversalLink;\n            }\n        }\n        else {\n            if (connectRequest) {\n                const base64Encoded = encodeConnectParams(connectRequest);\n                return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            }\n            else {\n                return protocol_1.standardDeeplink;\n            }\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return false;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider init() called');\n            (0, core_2.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_2.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_2.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_2.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [new core_2.AppwalletConnector(), new core_2.TgwalletConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider request() called');\n            (0, core_2.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_2.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_2.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_2.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_2.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_2.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_2.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_2.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_2.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_2.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_2.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_2.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_2.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_2.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_2.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_2.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_2.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_2.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_2.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_2.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_2.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_2.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_2.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_2.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_2.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_2.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_2.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_2.logDebug)('current get providers', this.rpcProviders);\n        (0, core_2.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_2.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_2.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_2.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_2.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_2.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_2.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_2.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            if (args.method === \"kaia_signTransaction\" && result && typeof result === 'string') {\n                                response.result = JSON.parse(result);\n                                (0, core_1.logDebug)(\"eip155 request --kaia_signTransaction>>>>\", response.result);\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000005400000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=ff004f7e&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=ff004f7e&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ff004f7e\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(29230); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","length","mod","result","i","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","report_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","error","clearCache","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","forEach","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","name","timeF","sendFetchAndConsumeMessages","init","sendRaw","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","startsWith","inputDataObj","msgResult","ttl","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","size","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","push","slice","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","Array","index_check","Set","add","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","filter","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","request","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","fixDappName","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","namespaces","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","session","assign","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","setUseConnector","sendSession","toLowerCase","title","getOGSiteName","metas","getElementsByTagName","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","accounts","filterAccount","namespace","ton_addr","address","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","timestamp","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","from","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","standardDeeplink","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","btc_provider_1","disconnectListener","providerMap","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","NameSpaceKeyAptos","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","NameSpaceKeyBtc","BtcProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","window","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","console","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","getRequestId","newRequest","onAck","checkWalletMatch","injectProvider","getNamespaceKeyByChain","chainId","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceChainNameToChainId","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","provider","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","stored","NOT_CONNECTED_ERROR","localAddress","connection","parse","localItem","connectEvent","items","TON_CHAINS","MAINNET","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","okxTonWallet","tonconnect","restoreConnection","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","injectParams","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","path","_provider","BtcMethods","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptosChainList","freeze","aptosInjectChainMap","aptos","searchNetwork","searchChainIdToInjectChainName","signMessage","injectResult","signTransaction","signAndSubmitTransaction","hash","METHOD_NOT_SUPPORTED","chainName","accountChange","connectRequestWalletResponse","connectChain","aptosAccount","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","onAccountChange","newAccount","bs58_1","accountChangedSolanaPublicKeyHandler","signedMessage","solana","bufferResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","needProof","accountChangedBtcHandler","unisat","switchChain","BTC_CHAINS","FRACTAL","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","signStr","type","to","satBytes","psbtHexs","options","signatures","isArray","signPsbt","signPsbts","psbtHex","signedPsbt","pushPsbt","txHash","inscriptionId","sendInscription","hasFunction","ticker","amount","inscribeTransfer","runeid","sendRunes","functionName","itemNameSpace","accountChangedEVMHandler","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","sui","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","NAMES_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","misc_1","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","values","NameSpaceKeyCosmos","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","downloadUrl","standardUniversalLink","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","chains_1","callForSuccess","fn","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","chainName2IdMap","replaceChainIdToChainName","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","logVersion","debug","forceReport","defaultReporter","OKXReporter","packageJson","args","okxLogDebug","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","markRecord","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","hex","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isInIOSLine","href","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","isInIOSChrome","isInIOSLark","isInIOSWeChat","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","deviceModel","model","browserName","browser","OKXBtcProvider","_1","core_1","caip","getAddressForChainId","ns","checkChainId","account","getAccount","ret","errorData","sendBitcoin","toAddress","satoshis","feeRate","txhash","checkParameters","psbtResults","signAndPushPsbt","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","fromAddress","suffix","unexistKeys","OKXCosmosProvider","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","core_2","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","rpcProviders","providerOpts","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","realChain","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","replaceNamespace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","listenerCount","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","needCheckRequestMethod","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","encodeMessage","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","trim","resultData","rpcUrls","eip155","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onModalStateChange","uri","isPC","testTonSdk","requestEVMAccountWithSession","blockExplorerUrls","nativeCurrency","symbol","decimals","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","uint8Array1","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","appendChild","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}