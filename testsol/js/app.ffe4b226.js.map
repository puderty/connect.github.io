{"version":3,"file":"js/app.ffe4b226.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, '');\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.7.3';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)()) {\n        if (isTelegram) {\n            window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    if (!(0, utils_1.isIos)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n    }\n    else if (iosUseDeeplink) {\n        fallbackToDownloadPage = () => {\n            console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n            if (!deepLinkOpened) {\n                console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                window.open(fullUrl, '_self');\n            }\n        };\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        let count = 0;\n        let interval = setInterval(() => {\n            count++;\n            console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n            if (document.hidden) {\n                deepLinkOpened = true;\n            }\n            if (count > 10 || document.hidden) {\n                clearInterval(interval);\n                console.log(\"windowOpen :cleat: ${count}\");\n            }\n        }, 200);\n        window.addEventListener('blur', () => {\n            console.log(\"windowOpen :blur\");\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        if (connectRequest) {\n            var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n            return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n        else {\n            return getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            if (connectRequest) {\n                return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n            }\n            else {\n                return constants_1.shortUniversalLink;\n            }\n        }\n        else {\n            if (connectRequest) {\n                const base64Encoded = encodeConnectParams(connectRequest);\n                return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            }\n            else {\n                return protocol_1.standardDeeplink;\n            }\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return false;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider init() called');\n            (0, core_2.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_2.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_2.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_2.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [new core_2.AppwalletConnector(), new core_2.TgwalletConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider request() called');\n            (0, core_2.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_2.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_2.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_2.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_2.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_2.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_2.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_2.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_2.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_2.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_2.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_2.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_2.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_2.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_2.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_2.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_2.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_2.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_2.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_2.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_2.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_2.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_2.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_2.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_2.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_2.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_2.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_2.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_2.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_2.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_2.logDebug)('current get providers', this.rpcProviders);\n        (0, core_2.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_2.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_2.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_2.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_2.OKXConnectError(core_2.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_2.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_2.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_2.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_2.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_2.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\",\n    \"solana_signMessage\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (args.method === 'eth_sendTransaction') {\n                    try {\n                        if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                            const transaction = args.params;\n                            if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                    transaction.data = transaction.input;\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                }\n                            }\n                            else {\n                                (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                            }\n                        }\n                    }\n                    catch (e) {\n                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002an            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002an            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=46dad1a2&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=46dad1a2&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-46dad1a2\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(58997); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","report_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","length","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","error","clearCache","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","forEach","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","name","timeF","sendFetchAndConsumeMessages","init","sendRaw","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","startsWith","inputDataObj","msgResult","ttl","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","size","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","push","slice","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","Array","index_check","Set","add","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","filter","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","request","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","namespaces","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","session","assign","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","setUseConnector","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","accounts","filterAccount","namespace","ton_addr","address","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","timestamp","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","from","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","btc_provider_1","disconnectListener","providerMap","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","NameSpaceKeyAptos","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","NameSpaceKeyBtc","BtcProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","window","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","console","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","getRequestId","newRequest","onAck","checkWalletMatch","injectProvider","getNamespaceKeyByChain","chainId","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceChainNameToChainId","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","provider","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","stored","NOT_CONNECTED_ERROR","localAddress","connection","parse","localItem","connectEvent","items","TON_CHAINS","MAINNET","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","okxTonWallet","tonconnect","restoreConnection","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","injectParams","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","BtcMethods","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptosChainList","freeze","aptosInjectChainMap","aptos","searchNetwork","searchChainIdToInjectChainName","toLowerCase","signMessage","injectResult","signTransaction","signAndSubmitTransaction","hash","METHOD_NOT_SUPPORTED","chainName","accountChange","connectRequestWalletResponse","connectChain","aptosAccount","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","onAccountChange","newAccount","bs58_1","accountChangedSolanaPublicKeyHandler","signedMessage","solana","bufferResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","needProof","accountChangedBtcHandler","unisat","switchChain","BTC_CHAINS","FRACTAL","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","signStr","type","to","satBytes","psbtHexs","options","signatures","isArray","signPsbt","signPsbts","psbtHex","signedPsbt","pushPsbt","txHash","inscriptionId","sendInscription","hasFunction","ticker","amount","inscribeTransfer","runeid","sendRunes","functionName","itemNameSpace","accountChangedEVMHandler","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","sui","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","NAMES_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","misc_1","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","values","NameSpaceKeyCosmos","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","chains_1","callForSuccess","fn","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","chainName2IdMap","replaceChainIdToChainName","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","args","okxLogDebug","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","markRecord","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","hex","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isInIOSLine","href","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","isInIOSChrome","isInIOSLark","isInIOSWeChat","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","deviceModel","model","browserName","browser","OKXBtcProvider","_1","core_1","caip","getAddressForChainId","ns","checkChainId","account","getAccount","ret","errorData","sendBitcoin","toAddress","satoshis","feeRate","txhash","checkParameters","psbtResults","signAndPushPsbt","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","fromAddress","suffix","unexistKeys","OKXCosmosProvider","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","core_2","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","realChain","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","replaceNamespace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","listenerCount","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","needCheckRequestMethod","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","encodeMessage","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","trim","resultData","rpcUrls","eip155","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onModalStateChange","uri","isPC","testTonSdk","blockExplorerUrls","nativeCurrency","symbol","decimals","requestEVMAccountWithSession","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","uint8Array1","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}