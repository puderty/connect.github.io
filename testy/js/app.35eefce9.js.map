{"version":3,"file":"js/app.35eefce9.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [new core_1.AppwalletConnector(), new core_1.TgwalletConnector()];\n        }\n        this.providerOpts = opts;\n        this.specialDAppLineType(this.providerOpts);\n        (0, core_1.logDebug)(\"constructor this.providerOpts>>\", JSON.stringify(this.providerOpts));\n        let linkType = core_1.OpenAppLinkType.UniversalLink;\n        switch (opts.openAppLinkType) {\n            case \"universallink\":\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n            case \"deeplink\":\n                linkType = core_1.OpenAppLinkType.DeepLink;\n                break;\n            default:\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n        }\n        this.providerOpts.openAppLinkType = linkType;\n        (0, core_1.logDebug)('OKXUniversalProvider constructor() linkType:', linkType);\n    }\n    specialDAppLineType(opts) {\n        let host = window.location.host;\n        if (host) {\n            let isSpecial = host.includes(\"dappportal.io\") || host.includes(\"connect.oker.vip\");\n            if (isSpecial && !opts.openAppLinkType) {\n                (0, core_1.logDebug)(\"specialDAppLineType --> host:\", host);\n                opts.openAppLinkType = core_1.OpenAppLinkType.DeepLink;\n            }\n        }\n    }\n    getOpenAppLinkType() {\n        var _a;\n        return (_a = this.providerOpts.openAppLinkType) !== null && _a !== void 0 ? _a : core_1.OpenAppLinkType.UniversalLink;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            opts.sessionConfig.openAppLinkType = this.providerOpts.openAppLinkType;\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events, this.providerOpts.openAppLinkType);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events, openAppLineType) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini).universalLink);\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n        this.openAppLineType = openAppLineType !== null && openAppLineType !== void 0 ? openAppLineType : core_1.OpenAppLinkType.UniversalLink;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl }, null, this.openAppLineType);\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector, this.openAppLineType);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n\n              <div style=\"font-size: 12px; color: gray;\">(以下方法不能广播上链，可以通过https://fee-delegated-tx-example-dapp.vercel.app 进行上链验证)</div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic mainnet\" name=\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n  \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"sonic:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"test location\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      function geoShowPosition(position) {\n        if (position) {\n\n          this.testboc = navigator.geolocation\n        } else {\n          console.log(`getPosError: position= empty`);\n        }\n      }\n      function geoShowError(error) {\n        console.log(`getPosError:${error.code},${navigator.geolocation},${error.message}`);\n      }\n\n      navigator.geolocation.getCurrentPosition(geoShowPosition, geoShowError);\n      // await window.testTon.openModal().catch(\n      //     (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          openAppLinkType:\"deeplink\"\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647da3078303030303030303030303030303030303030303030303030303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001\",\n            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=3177871c&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=3177871c&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3177871c\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(40356); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","__awaiter","this","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","OKXBtcProvider","_1","core_1","constructor","provider","caip","getAddressForChainId","chainId","_a","_b","ns","checkChainId","undefined","OKXConnectError","OKX_CONNECT_ERROR_CODES","UNKNOWN_ERROR","accounts","session","namespaces","filter","account","startsWith","length","address","split","getAccount","_c","extra","publicKey","signMessage","signStr","type","params","from","ret","request","method","errorData","error","sendBitcoin","toAddress","satoshis","options","to","toString","feeRate","send","txhash","input","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","results","JSON","parse","catch","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","toLowerCase","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","injectParams","sendRunes","runeid","amount","fromAddress","logDebug","stringify","err","inscribeTransfer","ticker","str","suffix","slice","keys","unexistKeys","forEach","key","push","console","log","join","includes","namespaceKey","_","OKXCosmosProvider","_d","_e","_f","NameSpaceKeyCosmos","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","data","base64Encoded","window","btoa","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signature","signDirect","object","bodyBytes","bufferToHex","authInfoBytes","accountNumber","res","messageToBuffer","message","buffer","Uint8Array","replace","arr","output","map","x","padStart","hexString","arrayBuffer","i","byteValue","parseInt","substr","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","CHAIN_NOT_SUPPORTED","NameSpaceKeyStarknet","typedData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","payload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","Array","isArray","executionRequest","nonce","version","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","on","tonWallet","wallet","callback","errorsHandler","connected","tonNameSpace","ton_addr","chain","network","walletStateInit","sessionWallet","tonDeviceInfo","platform","appName","appVersion","maxProtocolVersion","features","device","ton_proof","connectItems","tonProof","onStatusChange","item","TONCHAIN","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","NameSpaceKeyTron","stringToHex","hex","charCodeAt","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","timestamp","raw_data_hex","signAndSendTransaction","__importDefault","mod","__esModule","OKXUniversalProvider","eip155_1","sui_1","constants_1","eventemitter3_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","utils_1","packages_1","provider_1","starknet_1","init","opts","checkMetaData","dappMetaData","setGlobal","getDefaultReporter","configVersionAndSide","name","okxConnectUniversalinwindow","initialize","rpcProviders","events","default","connector","AppwalletConnector","TgwalletConnector","providerOpts","specialDAppLineType","linkType","OpenAppLinkType","UniversalLink","openAppLinkType","DeepLink","host","location","isSpecial","getOpenAppLinkType","args","reportLog","NOT_CONNECTED_ERROR","namespace","requestParam","buildRequestParamFromRequest","getProvider","safeJsonStringify","validateChain","keyArr","realChain","replaceChainNameToChainId","assign","redirect","sessionConfig","enable","client","connectOpts","connect","requestAccounts","disconnect","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectManagerDisconnect","emit","topic","replaceNamespace","nameSpace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","optionalNamespaces","realOptionNS","chains","defaultChain","replaceSessionAptos","replaceChainIdToChainName","index","values","disconnectInner","getCurrentConnectionReady","connectAndSign","signRequest","updatedOpts","openUniversalUrl","isMobileUserAgent","setNamespaces","setConnectConnector","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","signResponse","creatNotSupportMethodItemReplay","setTimeout","syncAllAddresses","syncAddressAvailable","syncAllAddress","METHOD_NOT_SUPPORTED","event","listener","once","removeListener","off","setDefaultChain","rpcUrl","test","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","url","hostname","origin","SignClient","registerConnector","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","manifestUrl","dappInfo","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","Date","now","sessionProperties","saveSessionContent","getSessionContent","showRequestModal","openWallet","engineConnectInfo","connectors","setAccountChangeListener","listenerCount","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","ISignClient","metaData","openAppLineType","super","connectRequest","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","setSessionConnectingListener","SESSION_CONNECTING","connectRequestMethods","connectMethodsToConnectWalletMethods","universalConnect","metadata","info","getOKXLink","useMini","universalLink","getAppWalletShortDeepLink","clientId","fillParamsToSession","connectMethodsResponseUpdate","isIos","openOKXWallet","response","requestId","code","onAck","Engine","accountChangeListener","tmaReturnUrl","allAddressStr","syncResoonseToRequire","needCheckRequestMethod","getConnector","InjectConnector","connectSupportMethods","connectMethodsAdaptOldVersion","bs58_1","isRecord","notSupportError","errorItem","callBackParams","solAccount","NameSpaceKeySOL","account1","solAddress","fromAccountToAddress","realMessage","encodeMessage","TextEncoder","encode","suiMessage","convertedArray","uint8Array","decoder","TextDecoder","b64encoded","decode","atob","btcAccounts","NameSpaceKeyBtc","account2","btcAccount","btcAddress","paramData","aptosAccount","NameSpaceKeyAptos","account3","aptosAddress","prefix","fullMessage","application","protocol","aptosChainId","utf8Array","byte","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","walletName","deriveName","addresses","addr","ci","a","evmAddress","freeze","getAccountsChains","isCaipNamespace","NameSpaceKeyEip155","NameSpaceKeySui","NameSpaceKeyTON","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","target","source","rpcMap","OKXWalletName","fixMobileBtcSession","btcNameSpace","Number","addressType","compressedPublicKey","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","methods","setHttpProvider","Error","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","adaptArray","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","trim","resultData","rpcUrls","eip155","cross_fetch_1","core_2","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","EventEmitter","isAvailable","registering","isHttpUrl","connecting","open","arguments","register","close","onClose","body","json","onPayload","onError","id","jsonrpc","onOpen","parseError","safeJsonParse","formatJsonRpcError","parseConnectionError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","formatJsonRpcRequest","getBigIntRpcId","isJsonRpcError","isJsonRpcResponse","reason","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","addressArr","logError","CAIP_DELIMITER","b","versionCompare","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","msg","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","toJSON","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","verify","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","getItem","selectedMethodData","isChecked","setItem","reload","delete","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","geoShowPosition","position","navigator","geolocation","geoShowError","getCurrentPosition","initCall","okxLogDebug","testTon","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","walletInfo","onModalStateChange","state","entries","substring","uri","useShortLink","isPC","items","testTonSdk","requestEVMAccountWithSession","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","USER_REJECTS_ERROR","hexStr","bytes","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","datatest","binary","fromCharCode","firstStr","showUrl","getUniversalLink","getAppWalletDeepLink","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","tonParams","ton","sui","aptos","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","accountAddress","userAgentInfo","userAgent","Agents","flag","v","isSafariOrChrome","pubkey","OKXSolanaProvider","encoder","uint8Array1","result1","nacl","detached","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","d","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}