{"version":3,"file":"js/app.f3945a63.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('injectResult' in signedMessage) {\n                    let injectResult = signedMessage.injectResult;\n                    console.error('aptos_signMessage --injectResult--', JSON.stringify(injectResult));\n                    return new Promise((resolve, reject) => {\n                        resolve(injectResult);\n                    });\n                }\n                else if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_RECV_DISCONNECT = exports.CONNECT_METHOD_DISCONNECT = exports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\nexports.CONNECT_METHOD_DISCONNECT = \"disconnect\";\nexports.CONNECT_METHOD_RECV_DISCONNECT = \"receiveDisconnect\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        this.connectorEnable = false;\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        if (inputObj.method && inputObj.method === commands_1.CONNECT_METHOD_PUSH) {\n                            // update topic expire check\n                            (0, log_1.logDebug)('checkExpire: update expire when get push');\n                            this.updateExpireLimit(topic);\n                        }\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check current topic is need expire\n                            if (fromRestore) {\n                                let checkExpired = this.checkExpire(topic);\n                                if (checkExpired) {\n                                    (0, log_1.logDebug)('disconnect From topic expire');\n                                    setTimeout(() => {\n                                        this.activateDisconnect();\n                                    }, 1000);\n                                }\n                                else {\n                                    (0, log_1.logDebug)('extends expire check');\n                                    this.updateExpireLimit(topic);\n                                }\n                            }\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n                this.connectorEnable = true;\n            });\n        });\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.refreshPackageId();\n                if (!this.connectorEnable) {\n                    log.logDebug('skip disconnect before connected relay');\n                    resolve();\n                    return;\n                }\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: disconnect command send');\n                    this.connectorEnable = false;\n                    resolve();\n                }));\n                const payload = {\n                    id: this.packageId.toString(),\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    method: commands_1.CONNECT_METHOD_DISCONNECT,\n                    params: {\n                        message: {\n                            topic: topic,\n                            ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                        }\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: skip reconnect send');\n                    // return await this.connector.connect();\n                }), payload);\n            }));\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            try {\n                yield this.sendDisconnect(this.currentTopic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: 'disconnect'\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.topic) {\n            let lastTopic = topicExpireCache.topic;\n            if (lastTopic == topic) {\n                if (Date.now() > topicExpireCache.timestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let saveExpireItem = {\n            topic: topic,\n            timestamp: Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL // ttl ms later\n        };\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE, saveExpireItem);\n    }\n    activateDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: 'disconnect'\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: this.currentTopic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_SESSION_LIVE_TTL = exports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\nexports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = 86400000;\nexports.OKXCONNECTOR_SESSION_LIVE_TTL = 86400000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    let linkType = (_b = sessionConfig.openAppLinkType) !== null && _b !== void 0 ? _b : protocol_1.OpenAppLinkType.UniversalLink;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    let universalLink = \"\";\n                    let deepLink = \"\";\n                    if (openUniversalLink) {\n                        let linkInfo = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        universalLink = linkInfo.universalLink;\n                        deepLink = linkInfo.deepLink || \"\";\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest,\n                            }, linkType);\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(universalLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, linkType);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag = \"\";\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    this.deviceInfo = Object.assign({}, session.wallet);\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, tag);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector, openAppLinkType) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo, openAppLinkType);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo, openAppLinkType);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            let chainId;\n            if ('chainId' in request && request.chainId != null) {\n                chainId = request.chainId.toString();\n            }\n            try {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestStart_Log, \"\", (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '', request.method, (_d = (_c = this.deviceInfo) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : \"\", chainId);\n                (_e = this.getConnector()) === null || _e === void 0 ? void 0 : _e.send(request, {\n                    resolve: (response) => {\n                        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, response);\n                        if (('error' in response) && response.error) {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_c = (_b = this.getConnector()) === null || _b === void 0 ? void 0 : _b.getTag()) !== null && _c !== void 0 ? _c : '', request.method, (_e = (_d = this.deviceInfo) === null || _d === void 0 ? void 0 : _d.platform) !== null && _e !== void 0 ? _e : \"\", chainId);\n                        }\n                        else {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestSuccess_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                        }\n                    },\n                    onAck: () => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n            }\n            catch (error) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                throw error;\n            }\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, (session) => {\n                var _a, _b;\n                onConnectResult(session);\n                if (session) {\n                    this.deviceInfo = Object.assign({}, session.wallet);\n                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '');\n                }\n            }));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = 'okx_connect_te_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = 'okx_connect_twe_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (input.method && input.method === commands_1.CONNECT_METHOD_PUSH) {\n                                // update topic expire check\n                                (0, log_1.logDebug)('checkExpire: update expire when get push');\n                                this.updateExpireLimit(topic);\n                            }\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_DISCONNECT,\n                params: {\n                    message: {\n                        topic: topic,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            try {\n                yield this.sendDisconnect(topic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: commands_1.CONNECT_METHOD_DISCONNECT\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check expire or extends expire\n                            let checkExpired = this.checkExpire(topicId);\n                            if (checkExpired) {\n                                (0, log_1.logDebug)('disconnect From topic expire');\n                                yield this.activateDisconnect(topicId);\n                            }\n                            else {\n                                (0, log_1.logDebug)('extends expire check');\n                                this.updateExpireLimit(topicId);\n                            }\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache instanceof Object) {\n            try {\n                let topicExpireMap = new Map(Object.entries(topicExpireCache));\n                let lastTimestamp = topicExpireMap.get(topic);\n                if (lastTimestamp) {\n                    if (Date.now() > lastTimestamp) {\n                        (0, log_1.logDebug)('checkExpire: connection is Expired');\n                        isExpired = true;\n                    }\n                }\n                else {\n                    (0, log_1.logDebug)('checkExpire: not same connection');\n                    isExpired = false;\n                }\n            }\n            catch (error) {\n                (0, log_1.logDebug)('checkExpire: cache error');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        try {\n            let cacheMapCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n            let cacheMap = new Map();\n            if (cacheMapCache) {\n                cacheMap = new Map(Object.entries(cacheMapCache));\n            }\n            let expireTimestamp = Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL; // ttl ms later\n            cacheMap.set(topic, expireTimestamp);\n            this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE, Object.fromEntries(cacheMap));\n        }\n        catch (error) {\n            (0, log_1.logDebug)(\"update cache failed\");\n        }\n    }\n    activateDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: commands_1.CONNECT_METHOD_DISCONNECT\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: topic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nconst protocol_1 = require(\"../protocol\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        let lineType = openAppLinkType !== null && openAppLinkType !== void 0 ? openAppLinkType : protocol_1.OpenAppLinkType.UniversalLink;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo.connectRequest;\n            if (!(0, utils_1.useShortLink)()) {\n                localConnectRequest = Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" });\n            }\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, lineType);\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink, constants_1.shortUniversalLink, lineType);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.downloadUrl = exports.shortUniversalLink = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.shortUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? `https://link.okx.com/ul/connect`\n    : `https://www.okx.com/ul/connect`;\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\n// export const stackDeepLink:string = 'okx://web3/dapp/open'\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.shortUniversalLink = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.OpenAppLinkType = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nObject.defineProperty(exports, \"OpenAppLinkType\", { enumerable: true, get: function () { return misc_1.OpenAppLinkType; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\nObject.defineProperty(exports, \"shortUniversalLink\", { enumerable: true, get: function () { return constants_1.shortUniversalLink; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = exports.OpenAppLinkType = void 0;\nvar OpenAppLinkType;\n(function (OpenAppLinkType) {\n    OpenAppLinkType[\"UniversalLink\"] = \"universallink\";\n    OpenAppLinkType[\"DeepLink\"] = \"deeplink\";\n})(OpenAppLinkType || (exports.OpenAppLinkType = OpenAppLinkType = {}));\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type_1, action_1, content_1) {\n    return __awaiter(this, arguments, void 0, function* (type, action, content, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n        try {\n            yield defaultReporter.sendRecordContent(content, type, action, reverved1, reverved2, reverved3, reverved4, reverved5, reverved6);\n        }\n        catch (e) {\n        }\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.8.0';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content_1, type_1, action_1) {\n        return __awaiter(this, arguments, void 0, function* (content, type, action, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua,\n                reverved1: reverved1,\n                reverved2: reverved2,\n                reverved3: reverved3,\n                reverved4: reverved4,\n                reverved5: reverved5,\n                reverved6: reverved6\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDK_RequestError_Log = exports.Report_OKXConnectSDK_RequestSuccess_Log = exports.Report_OKXConnectSDK_RequestStart_Log = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_OKXConnectSDK_RequestStart_Log = \"Report_OKXConnectSDK_RequestStart_View\";\nexports.Report_OKXConnectSDK_RequestSuccess_Log = \"Report_OKXConnectSDK_RequestSuccess_View\";\nexports.Report_OKXConnectSDK_RequestError_Log = \"Report_OKXConnectSDK_RequestError_View\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl, universalLink, linkType) {\n    openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, false);\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, shouldFallback = true) {\n    var _a;\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", universalLink);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = false;\n    if (linkType === protocol_1.OpenAppLinkType.UniversalLink) {\n        iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    }\n    else {\n        // OpenAppLinkType.DeepLink\n        iosUseDeeplink = isTelegram === false && (0, utils_1.isIos)();\n    }\n    if (shouldFallback) {\n        if (!(0, utils_1.isIos)()) {\n            fallbackToDownloadPage = () => {\n                if (!deepLinkOpened) {\n                    if (newWindow) {\n                        newWindow.open(universalLink, '_self');\n                    }\n                    else {\n                        window.open(universalLink, '_blank');\n                    }\n                }\n            };\n        }\n        else if (iosUseDeeplink) {\n            fallbackToDownloadPage = () => {\n                console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n                if (!deepLinkOpened) {\n                    console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                    window.open(universalLink, '_self');\n                }\n            };\n        }\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        if (shouldFallback) {\n            setTimeout(fallbackToDownloadPage, timeoutDuration);\n            let count = 0;\n            let interval = setInterval(() => {\n                count++;\n                console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n                if (document.hidden) {\n                    deepLinkOpened = true;\n                }\n                if (count > 10 || document.hidden) {\n                    clearInterval(interval);\n                    console.log(\"windowOpen :cleat: ${count}\");\n                }\n            }, 200);\n            window.addEventListener('blur', () => {\n                console.log(\"windowOpen :blur\");\n                deepLinkOpened = true;\n            }, { once: true });\n            document.addEventListener('visibilitychange', () => {\n                console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n                if (document.visibilityState === 'hidden') {\n                    deepLinkOpened = true;\n                }\n            });\n        }\n    }\n    else {\n        if (isTelegram) {\n            window.open(universalLink, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(universalLink, '_blank');\n            }\n            else {\n                window.open(universalLink, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        return connectRequest\n            ? { universalLink: getTelegramWalletTWAUrl(encodeTWAConnectURLParams(connectRequest), tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") }\n            : { universalLink: getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") };\n    }\n    else {\n        let deepLink = connectRequest\n            ? `${protocol_1.standardDeeplink}?param=${encodeConnectParams(connectRequest)}`\n            : protocol_1.standardDeeplink;\n        if ((0, utils_1.useShortLink)()) {\n            let shortUniversalLinkResult = connectRequest\n                ? getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId)\n                : constants_1.shortUniversalLink;\n            return { universalLink: shortUniversalLinkResult, deepLink: deepLink };\n        }\n        else {\n            return { universalLink: getUniversalLink(deepLink), deepLink: deepLink };\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nexports.chainName2IdMap.set(\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000073\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst packages_2 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            if ((0, packages_1.isMobileDiscover)()) {\n                opts.connector = [new core_1.OkxwalletInjectConnector()];\n            }\n            else {\n                opts.connector = [new core_1.AppwalletConnector(), new core_1.TgwalletConnector()];\n            }\n        }\n        this.providerOpts = opts;\n        this.specialDAppLineType(this.providerOpts);\n        (0, core_1.logDebug)(\"constructor this.providerOpts>>\", JSON.stringify(this.providerOpts));\n        let linkType = core_1.OpenAppLinkType.UniversalLink;\n        switch (opts.openAppLinkType) {\n            case \"universallink\":\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n            case \"deeplink\":\n                linkType = core_1.OpenAppLinkType.DeepLink;\n                break;\n            default:\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n        }\n        this.providerOpts.openAppLinkType = linkType;\n        (0, core_1.logDebug)('OKXUniversalProvider constructor() linkType:', linkType);\n    }\n    specialDAppLineType(opts) {\n        let host = window.location.host;\n        if (host) {\n            let isSpecial = host.includes(\"dappportal.io\") || host.includes(\"connect.oker.vip\");\n            if (isSpecial && !opts.openAppLinkType) {\n                (0, core_1.logDebug)(\"specialDAppLineType --> host:\", host);\n                opts.openAppLinkType = core_1.OpenAppLinkType.DeepLink;\n            }\n        }\n    }\n    getOpenAppLinkType() {\n        var _a;\n        return (_a = this.providerOpts.openAppLinkType) !== null && _a !== void 0 ? _a : core_1.OpenAppLinkType.UniversalLink;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            opts.sessionConfig.openAppLinkType = this.providerOpts.openAppLinkType;\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_2.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events, this.providerOpts.openAppLinkType);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events, openAppLineType) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini).universalLink);\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n        this.openAppLineType = openAppLineType !== null && openAppLineType !== void 0 ? openAppLineType : core_1.OpenAppLinkType.UniversalLink;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl }, null, this.openAppLineType);\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector, this.openAppLineType);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.isMobileDiscover = isMobileDiscover;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction isMobileDiscover() {\n    return !!(window.okxwallet) && window.okxwallet.mobileDiscoverWallet;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMobileDiscover = exports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\nObject.defineProperty(exports, \"isMobileDiscover\", { enumerable: true, get: function () { return ConnectMethodUtils_1.isMobileDiscover; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n\n              <div style=\"font-size: 12px; color: gray;\">(以下方法不能广播上链，可以通过https://fee-delegated-tx-example-dapp.vercel.app 进行上链验证)</div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic mainnet\" name=\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n  \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"sonic:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          openAppLinkType:\"deeplink\"\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647da3078303030303030303030303030303030303030303030303030303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001\",\n            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5f6ba2cc&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5f6ba2cc&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5f6ba2cc\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(38768); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","constructor","provider","chainsSet","Set","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","substring","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","injectParams","signedMessage","request","injectResult","error","JSON","stringify","successData","signStr","slice","signature","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","CONNECT_METHOD_RECV_DISCONNECT","CONNECT_METHOD_DISCONNECT","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","mod","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","protocol_1","report_1","WS","resolveWebSocketImplementation","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","Date","now","emit","onClose","event","socket","code","onError","id","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectorEnable","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","clearCache","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","method","updateExpireLimit","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","init","sendRaw","checkExpired","checkExpire","activateDisconnect","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","token","replace","parsedMessage","sendDisconnect","ttl","OKXCONNECTOR_MESSAGE_DISCONNECT_TTL","sendRecvDisconnect","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","inputDataObj","msgResult","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","disconnectedTopics","topicInfo","disconnectPayload","requestId","disconnectMsg","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","isExpired","topicExpireCache","OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE","lastTopic","timestamp","saveExpireItem","OKXCONNECTOR_SESSION_LIVE_TTL","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","index_check","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","sessionConfig","connectInfoAndUrl","universalRequest","connectInfo","openUniversalLink","openUniversalUrl","linkType","openAppLinkType","OpenAppLinkType","UniversalLink","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","fixDappName","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","universalLink","deepLink","linkInfo","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","deviceInfo","setUseConnector","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","sendSession","toLowerCase","title","getOGSiteName","metas","getElementsByTagName","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","Report_OKXConnectSDK_RequestStart_Log","platform","Report_OKXConnectSDK_RequestError_Log","Report_OKXConnectSDK_RequestSuccess_Log","onAck","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","filterAccount","namespace","ton_addr","tonAddress","tonProof","ton_proof","addresses","methods","addressItem","addressArr","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE","OKXCONNECTOR_STORAGE_CIPHER_METHOD","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","topicExpireMap","lastTimestamp","cacheMapCache","expireTimestamp","fromEntries","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","lineType","localConnectRequest","useShortLink","isOS","openDeeplinkWithFallback","stackDeepLink","standardDeeplink","shortUniversalLink","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","btc_provider_1","disconnectListener","providerMap","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","NameSpaceKeyBtc","BtcProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","okxwallet","requestAccounts","version","getVersion","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","getRequestId","newRequest","checkWalletMatch","injectProvider","getNamespaceKeyByChain","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceChainNameToChainId","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","stored","NOT_CONNECTED_ERROR","localAddress","connection","parse","localItem","connectEvent","items","TON_CHAINS","MAINNET","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","okxTonWallet","tonconnect","restoreConnection","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","path","_provider","BtcMethods","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptosChainList","freeze","aptosInjectChainMap","aptos","searchNetwork","searchChainIdToInjectChainName","hash","METHOD_NOT_SUPPORTED","chainName","accountChange","connectRequestWalletResponse","connectChain","aptosAccount","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","onAccountChange","newAccount","bs58_1","accountChangedSolanaPublicKeyHandler","solana","bufferResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","needProof","accountChangedBtcHandler","unisat","switchChain","BTC_CHAINS","FRACTAL","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","to","satBytes","psbtHexs","options","signatures","signPsbt","signPsbts","psbtHex","signedPsbt","pushPsbt","txHash","inscriptionId","sendInscription","hasFunction","ticker","amount","inscribeTransfer","runeid","sendRunes","functionName","itemNameSpace","accountChangedEVMHandler","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","sui","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","NAMES_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","misc_1","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","NameSpaceKeyCosmos","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","downloadUrl","standardUniversalLink","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","chains_1","callForSuccess","fn","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","chainName2IdMap","replaceChainIdToChainName","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","logVersion","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","sendRecordContent","warn","type_1","action_1","content_1","action","reverved1","reverved2","reverved3","reverved4","reverved5","reverved6","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","encoder","createCodec","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","shouldFallback","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","isInIOSChrome","isInIOSLine","isInIOSLark","isInIOSWeChat","href","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","shortUniversalLinkResult","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","deviceModel","model","browserName","browser","OKXBtcProvider","_1","caip","getAddressForChainId","ns","checkChainId","ret","errorData","sendBitcoin","toAddress","satoshis","feeRate","txhash","checkParameters","psbtResults","signAndPushPsbt","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","fromAddress","suffix","unexistKeys","OKXCosmosProvider","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","authInfoBytes","accountNumber","messageToBuffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","packages_2","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","rpcProviders","isMobileDiscover","providerOpts","specialDAppLineType","DeepLink","host","isSpecial","getOpenAppLinkType","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","replaceNamespace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","caip2Chain","sessionProperties","showRequestModal","listenerCount","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","openAppLineType","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","needCheckRequestMethod","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","mobileDiscoverWallet","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","encodeMessage","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","trim","resultData","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onModalStateChange","uri","isPC","testTonSdk","requestEVMAccountWithSession","blockExplorerUrls","nativeCurrency","symbol","decimals","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","uint8Array1","result1","nacl","PublicKey","toBytes","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","appendChild","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}