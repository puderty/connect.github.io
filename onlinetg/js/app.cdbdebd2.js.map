{"version":3,"file":"js/app.cdbdebd2.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_RECV_DISCONNECT = exports.CONNECT_METHOD_DISCONNECT = exports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\nexports.CONNECT_METHOD_DISCONNECT = \"disconnect\";\nexports.CONNECT_METHOD_RECV_DISCONNECT = \"receiveDisconnect\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        this.connectorEnable = false;\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        if (inputObj.method && inputObj.method === commands_1.CONNECT_METHOD_PUSH) {\n                            // update topic expire check\n                            (0, log_1.logDebug)('checkExpire: update expire when get push');\n                            this.updateExpireLimit(topic);\n                        }\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check current topic is need expire\n                            if (fromRestore) {\n                                let checkExpired = this.checkExpire(topic);\n                                if (checkExpired) {\n                                    (0, log_1.logDebug)('disconnect From topic expire');\n                                    setTimeout(() => {\n                                        this.activateDisconnect();\n                                    }, 1000);\n                                }\n                                else {\n                                    (0, log_1.logDebug)('extends expire check');\n                                    this.updateExpireLimit(topic);\n                                }\n                            }\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n                this.connectorEnable = true;\n            });\n        });\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.refreshPackageId();\n                if (!this.connectorEnable) {\n                    log.logDebug('skip disconnect before connected relay');\n                    resolve();\n                    return;\n                }\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: disconnect command send');\n                    this.connectorEnable = false;\n                    resolve();\n                }));\n                const payload = {\n                    id: this.packageId.toString(),\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    method: commands_1.CONNECT_METHOD_DISCONNECT,\n                    params: {\n                        message: {\n                            topic: topic,\n                            ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                        }\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: skip reconnect send');\n                    // return await this.connector.connect();\n                }), payload);\n            }));\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            try {\n                yield this.sendDisconnect(this.currentTopic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: 'disconnect'\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.topic) {\n            let lastTopic = topicExpireCache.topic;\n            if (lastTopic == topic) {\n                if (Date.now() > topicExpireCache.timestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let saveExpireItem = {\n            topic: topic,\n            timestamp: Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL // ttl ms later\n        };\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE, saveExpireItem);\n    }\n    activateDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: 'disconnect'\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: this.currentTopic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_SESSION_LIVE_TTL = exports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\nexports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = 86400000;\nexports.OKXCONNECTOR_SESSION_LIVE_TTL = 86400000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    let linkType = (_b = sessionConfig.openAppLinkType) !== null && _b !== void 0 ? _b : protocol_1.OpenAppLinkType.UniversalLink;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    let universalLink = \"\";\n                    let deepLink = \"\";\n                    if (openUniversalLink) {\n                        let linkInfo = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        universalLink = linkInfo.universalLink;\n                        deepLink = linkInfo.deepLink || \"\";\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest,\n                            }, linkType);\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(universalLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, linkType);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag = \"\";\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    this.deviceInfo = Object.assign({}, session.wallet);\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, tag);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector, openAppLinkType) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo, openAppLinkType);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo, openAppLinkType);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            let chainId;\n            if ('chainId' in request && request.chainId != null) {\n                chainId = request.chainId.toString();\n            }\n            try {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestStart_Log, \"\", (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '', request.method, (_d = (_c = this.deviceInfo) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : \"\", chainId);\n                (_e = this.getConnector()) === null || _e === void 0 ? void 0 : _e.send(request, {\n                    resolve: (response) => {\n                        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, response);\n                        if (('error' in response) && response.error) {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_c = (_b = this.getConnector()) === null || _b === void 0 ? void 0 : _b.getTag()) !== null && _c !== void 0 ? _c : '', request.method, (_e = (_d = this.deviceInfo) === null || _d === void 0 ? void 0 : _d.platform) !== null && _e !== void 0 ? _e : \"\", chainId);\n                        }\n                        else {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestSuccess_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                        }\n                    },\n                    onAck: () => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n            }\n            catch (error) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                throw error;\n            }\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, (session) => {\n                var _a, _b;\n                onConnectResult(session);\n                if (session) {\n                    this.deviceInfo = Object.assign({}, session.wallet);\n                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '');\n                }\n            }));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = 'okx_connect_te_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = 'okx_connect_twe_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (input.method && input.method === commands_1.CONNECT_METHOD_PUSH) {\n                                // update topic expire check\n                                (0, log_1.logDebug)('checkExpire: update expire when get push');\n                                this.updateExpireLimit(topic);\n                            }\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_DISCONNECT,\n                params: {\n                    message: {\n                        topic: topic,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            try {\n                yield this.sendDisconnect(topic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: commands_1.CONNECT_METHOD_DISCONNECT\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check expire or extends expire\n                            let checkExpired = this.checkExpire(topicId);\n                            if (checkExpired) {\n                                (0, log_1.logDebug)('disconnect From topic expire');\n                                yield this.activateDisconnect(topicId);\n                            }\n                            else {\n                                (0, log_1.logDebug)('extends expire check');\n                                this.updateExpireLimit(topicId);\n                            }\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.get(topic)) {\n            let lastTimestamp = topicExpireCache.get(topic);\n            if (lastTimestamp) {\n                if (Date.now() > lastTimestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let cacheMap = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (!cacheMap) {\n            cacheMap = new Map();\n        }\n        let expireTimestamp = Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL; // ttl ms later\n        cacheMap.set(topic, expireTimestamp);\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE, cacheMap);\n    }\n    activateDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: commands_1.CONNECT_METHOD_DISCONNECT\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: topic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nconst protocol_1 = require(\"../protocol\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        let lineType = openAppLinkType !== null && openAppLinkType !== void 0 ? openAppLinkType : protocol_1.OpenAppLinkType.UniversalLink;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo.connectRequest;\n            if (!(0, utils_1.useShortLink)()) {\n                localConnectRequest = Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" });\n            }\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, lineType);\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink, constants_1.shortUniversalLink, lineType);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.downloadUrl = exports.shortUniversalLink = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.shortUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? `https://link.okx.com/ul/connect`\n    : `https://www.okx.com/ul/connect`;\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\n// export const stackDeepLink:string = 'okx://web3?stack=true'\nexports.stackDeepLink = 'okx://web3/dapp/open';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.shortUniversalLink = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.OpenAppLinkType = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nObject.defineProperty(exports, \"OpenAppLinkType\", { enumerable: true, get: function () { return misc_1.OpenAppLinkType; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\nObject.defineProperty(exports, \"shortUniversalLink\", { enumerable: true, get: function () { return constants_1.shortUniversalLink; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = exports.OpenAppLinkType = void 0;\nvar OpenAppLinkType;\n(function (OpenAppLinkType) {\n    OpenAppLinkType[\"UniversalLink\"] = \"UniversalLink\";\n    OpenAppLinkType[\"DeepLink\"] = \"DeepLink\";\n})(OpenAppLinkType || (exports.OpenAppLinkType = OpenAppLinkType = {}));\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type_1, action_1, content_1) {\n    return __awaiter(this, arguments, void 0, function* (type, action, content, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n        try {\n            yield defaultReporter.sendRecordContent(content, type, action, reverved1, reverved2, reverved3, reverved4, reverved5, reverved6);\n        }\n        catch (e) {\n        }\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.7.8';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content_1, type_1, action_1) {\n        return __awaiter(this, arguments, void 0, function* (content, type, action, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua,\n                reverved1: reverved1,\n                reverved2: reverved2,\n                reverved3: reverved3,\n                reverved4: reverved4,\n                reverved5: reverved5,\n                reverved6: reverved6\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDK_RequestError_Log = exports.Report_OKXConnectSDK_RequestSuccess_Log = exports.Report_OKXConnectSDK_RequestStart_Log = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_OKXConnectSDK_RequestStart_Log = \"Report_OKXConnectSDK_RequestStart_View\";\nexports.Report_OKXConnectSDK_RequestSuccess_Log = \"Report_OKXConnectSDK_RequestSuccess_View\";\nexports.Report_OKXConnectSDK_RequestError_Log = \"Report_OKXConnectSDK_RequestError_View\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl, universalLink, linkType) {\n    openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, false);\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, shouldFallback = true) {\n    var _a;\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", universalLink);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = false;\n    if (linkType === protocol_1.OpenAppLinkType.UniversalLink) {\n        iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    }\n    else {\n        // OpenAppLinkType.DeepLink\n        iosUseDeeplink = isTelegram === false && (0, utils_1.isIos)();\n    }\n    if (shouldFallback) {\n        if (!(0, utils_1.isIos)()) {\n            fallbackToDownloadPage = () => {\n                if (!deepLinkOpened) {\n                    if (newWindow) {\n                        newWindow.open(universalLink, '_self');\n                    }\n                    else {\n                        window.open(universalLink, '_blank');\n                    }\n                }\n            };\n        }\n        else if (iosUseDeeplink) {\n            fallbackToDownloadPage = () => {\n                console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n                if (!deepLinkOpened) {\n                    console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                    window.open(universalLink, '_self');\n                }\n            };\n        }\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        if (shouldFallback) {\n            setTimeout(fallbackToDownloadPage, timeoutDuration);\n            let count = 0;\n            let interval = setInterval(() => {\n                count++;\n                console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n                if (document.hidden) {\n                    deepLinkOpened = true;\n                }\n                if (count > 10 || document.hidden) {\n                    clearInterval(interval);\n                    console.log(\"windowOpen :cleat: ${count}\");\n                }\n            }, 200);\n            window.addEventListener('blur', () => {\n                console.log(\"windowOpen :blur\");\n                deepLinkOpened = true;\n            }, { once: true });\n            document.addEventListener('visibilitychange', () => {\n                console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n                if (document.visibilityState === 'hidden') {\n                    deepLinkOpened = true;\n                }\n            });\n        }\n    }\n    else {\n        if (isTelegram) {\n            window.open(universalLink, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(universalLink, '_blank');\n            }\n            else {\n                window.open(universalLink, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        return connectRequest\n            ? { universalLink: getTelegramWalletTWAUrl(encodeTWAConnectURLParams(connectRequest), tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") }\n            : { universalLink: getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") };\n    }\n    else {\n        let deepLink = connectRequest\n            ? `${protocol_1.standardDeeplink}?param=${encodeConnectParams(connectRequest)}`\n            : protocol_1.standardDeeplink;\n        if ((0, utils_1.useShortLink)()) {\n            let shortUniversalLinkResult = connectRequest\n                ? getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId)\n                : constants_1.shortUniversalLink;\n            return { universalLink: shortUniversalLinkResult, deepLink: deepLink };\n        }\n        else {\n            return { universalLink: getUniversalLink(deepLink), deepLink: deepLink };\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nexports.chainName2IdMap.set(\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000073\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        runeid: runeid,\n                        amount: amount,\n                        options: options\n                    }\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider', 'dapp', opts.dappMetaData.name);\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [new core_1.AppwalletConnector(), new core_1.TgwalletConnector()];\n        }\n        this.providerOpts = opts;\n        this.specialDAppLineType(this.providerOpts);\n        (0, core_1.logDebug)(\"constructor this.providerOpts>>\", JSON.stringify(this.providerOpts));\n        let linkType = core_1.OpenAppLinkType.UniversalLink;\n        switch (opts.openAppLinkType) {\n            case \"universallink\":\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n            case \"deeplink\":\n                linkType = core_1.OpenAppLinkType.DeepLink;\n                break;\n            default:\n                linkType = core_1.OpenAppLinkType.UniversalLink;\n                break;\n        }\n        this.providerOpts.openAppLinkType = linkType;\n        (0, core_1.logDebug)('OKXUniversalProvider constructor() linkType:', linkType);\n    }\n    specialDAppLineType(opts) {\n        let host = window.location.host;\n        if (host) {\n            let isSpecial = host.includes(\"dappportal.io\") || host.includes(\"connect.oker.vip\");\n            if (isSpecial && !opts.openAppLinkType) {\n                (0, core_1.logDebug)(\"specialDAppLineType --> host:\", host);\n                opts.openAppLinkType = core_1.OpenAppLinkType.DeepLink;\n            }\n        }\n    }\n    getOpenAppLinkType() {\n        var _a;\n        return (_a = this.providerOpts.openAppLinkType) !== null && _a !== void 0 ? _a : core_1.OpenAppLinkType.UniversalLink;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        let realChain = (0, core_1.replaceChainNameToChainId)(`${namespace}:${chainId}`);\n        if (realChain != null) {\n            namespace = realChain.split(\":\")[0];\n            chainId = realChain.split(\":\")[1];\n        }\n        // if (namespace == \"aptos\" && chainId == \"mainnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"637\"\n        // }\n        // if (namespace == \"movement\" && chainId == \"testnet\") {\n        //     namespace = \"aptos\"\n        //     chainId = \"70000060\"\n        // }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    replaceNamespace(opts, nameSpace) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[nameSpace];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceNamespaceInner(aptosNameSpace);\n            if (opts.namespaces != undefined && nameSpace in opts.namespaces && realNS != undefined) {\n                opts.namespaces[nameSpace] = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[nameSpace];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceNamespaceInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && nameSpace in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces[nameSpace] = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceNamespaceInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return (0, core_1.replaceChainNameToChainId)(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = (0, core_1.replaceChainNameToChainId)(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceSessionAptos(session, namespace) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[namespace];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return (0, core_1.replaceChainIdToChainName)(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return (0, core_1.replaceChainIdToChainName)(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = (0, core_1.replaceChainIdToChainName)(key);\n                extra[(0, core_1.replaceChainIdToChainName)(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[namespace].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), signRequest);\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceNamespace(opts, \"aptos\");\n            opts = this.replaceNamespace(opts, \"solana\");\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            opts.sessionConfig.openAppLinkType = this.providerOpts.openAppLinkType;\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.chainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events, this.providerOpts.openAppLinkType);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    let soonProvider = new solana_1.default(opts1, \"soon\", this.client, this.events);\n                    this.rpcProviders['soon'] = soonProvider;\n                    let eclipseProvider = new solana_1.default(opts1, \"eclipse\", this.client, this.events);\n                    this.rpcProviders['eclipse'] = eclipseProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session, \"aptos\");\n                    this.replaceSessionAptos(session, \"solana\");\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events, openAppLineType) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini).universalLink);\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n        this.openAppLineType = openAppLineType !== null && openAppLineType !== void 0 ? openAppLineType : core_1.OpenAppLinkType.UniversalLink;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl }, null, this.openAppLineType);\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector, this.openAppLineType);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n    needCheckRequestMethod() {\n        try {\n            return !(this.engine.getConnector() instanceof core_1.InjectConnector);\n        }\n        catch (error) {\n            return true;\n        }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    requestParams.injectParams = requestParams.params;\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    requestParams.injectParams = {\n                        message: uint8Array\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    requestParams.injectParams = paramData;\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            methodItem.chainId = (0, core_1.replaceChainIdToChainName)(methodItem.chainId);\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    methodItem.chainId = (0, core_1.replaceChainNameToChainId)(methodItem.chainId);\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'kaia_signTransaction'\n            || args.method === 'klay_signTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (args.method === 'eth_signLegacy'\n                || args.method === 'eth_sign') {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `${args.method} method not supported`);\n            }\n            args.injectParams = args.params;\n            this.adaptArray(args);\n            if (this.client.needCheckRequestMethod()) {\n                if (args.method === 'klay_signTransaction') {\n                    args.method = 'kaia_signTransaction';\n                }\n            }\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                if (this.client.needCheckRequestMethod()) {\n                    if (args.method === 'eth_sendTransaction'\n                        || args.method === 'kaia_signTransaction') {\n                        try {\n                            if (args.params && typeof args.params === \"object\" && !Array.isArray(args.params)) {\n                                const transaction = args.params;\n                                if (typeof transaction.input === \"string\" && transaction.input.trim() !== \"\") {\n                                    if (!transaction.data || (typeof transaction.data === \"string\" && transaction.data.trim() === \"\")) {\n                                        transaction.data = transaction.input;\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  replace data with input\");\n                                    }\n                                    else {\n                                        (0, core_1.logDebug)(\"eip155 sendTransaction:  data not empty\");\n                                    }\n                                }\n                                else {\n                                    (0, core_1.logDebug)(\"eip155 sendTransaction:  input empty\");\n                                }\n                            }\n                        }\n                        catch (e) {\n                            (0, core_1.logDebug)(\"eip155 sendTransaction:  replace error\");\n                        }\n                    }\n                }\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logDebug)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (!this.client.needCheckRequestMethod() || this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- soon -->\n            <el-tab-pane label=\"soon:mainnet\" name=\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"soon:testnet\" name=\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"eclipse:mainnet\" name=\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Kaia\" name=\"eip155:8217\">\n\n              <div style=\"font-size: 12px; color: gray;\">(以下方法不能广播上链，可以通过https://fee-delegated-tx-example-dapp.vercel.app 进行上链验证)</div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction\">kaia_signTransaction(Transfer)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_memo\">kaia_signTransaction(Transfer with memo)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"kaia_signTransaction_Smart_Contract\">kaia_signTransaction(Smart Contract)</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic mainnet\" name=\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement mainnet\" name=\"movement:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  8217: {name: \"Kaia\", checked:false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:mainnet\": {name: \"Movement mainnet\", checked: false},\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false},\n  \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"soon:mainnet\", checked: false},\n  \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\":{name:\"soon:testnet\", checked: false},\n  \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"eclipse:mainnet\", checked: false},\n  \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\":{name:\"sonic:mainnet\", checked: false},\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          openAppLinkType:\"deeplink\"\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n      params:[{\n        \"typeInt\": 9,\n        \"from\": address,\n        \"to\": address,\n        \"value\": \"0x10\",\n        \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n      }],\n      };\n\n      console.log(\"kaia_signTransaction >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_memo() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 17,\n          \"from\": address,\n          \"to\": address,\n          \"value\": \"0x10\",\n          \"input\": \"0x1234567890abcdef\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_memo >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async kaia_signTransaction_Smart_Contract() {\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n      var data = {method: \"kaia_signTransaction\",\n        params:[{\n          \"typeInt\": 49,\n          \"from\": address,\n          \"to\": \"0x95Be48607498109030592C08aDC9577c7C2dD505\",\n          \"input\": \"0xd09de08a\",\n          \"value\": \"0x0\",\n          \"feePayer\": \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n        }],\n      };\n      console.log(\"kaia_signTransaction_Smart_Contract >>>\", address, JSON.stringify(data));\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n        \"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\") ||\n                    item.startsWith(\"soon\") ||\n                    item.startsWith(\"eclipse\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")||\n                    item.startsWith(\"soon\")||\n                    item.startsWith(\"eclipse\")\n\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择bitcoin链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=4c1a9f4c&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=4c1a9f4c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c1a9f4c\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在 https://okxwallet.github.io/test-dapp/psbt/builder  网站链接钱包，选择Fractal链\n        </li>\n        <li>\n          2. 选择UTXO 并且设置输出 UTXO，点击签名 PSBT,弹出签名面板，点开高级选项，\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=0db728fd&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=0db728fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0db728fd\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5f6ba2cc&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5f6ba2cc&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5f6ba2cc\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(38768); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","constructor","provider","chainsSet","Set","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","substring","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","signedMessage","request","successData","signStr","slice","signature","error","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","CONNECT_METHOD_RECV_DISCONNECT","CONNECT_METHOD_DISCONNECT","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__setModuleDefault","v","__importStar","mod","prototype","hasOwnProperty","call","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","protocol_1","report_1","WS","resolveWebSocketImplementation","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","Date","now","emit","onClose","event","socket","code","onError","id","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectorEnable","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","clearCache","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","method","updateExpireLimit","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","init","sendRaw","checkExpired","checkExpire","activateDisconnect","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","token","replace","parsedMessage","sendDisconnect","ttl","OKXCONNECTOR_MESSAGE_DISCONNECT_TTL","sendRecvDisconnect","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","inputDataObj","msgResult","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","disconnectedTopics","topicInfo","disconnectPayload","requestId","disconnectMsg","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","isExpired","topicExpireCache","OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE","lastTopic","timestamp","saveExpireItem","OKXCONNECTOR_SESSION_LIVE_TTL","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","index_check","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","connectInfo","openUniversalLink","openUniversalUrl","linkType","openAppLinkType","OpenAppLinkType","UniversalLink","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","fixDappName","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","universalLink","deepLink","linkInfo","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","deviceInfo","setUseConnector","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","sendSession","toLowerCase","title","getOGSiteName","metas","getElementsByTagName","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","Report_OKXConnectSDK_RequestStart_Log","platform","Report_OKXConnectSDK_RequestError_Log","Report_OKXConnectSDK_RequestSuccess_Log","onAck","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","filterAccount","namespace","ton_addr","tonAddress","tonProof","ton_proof","addresses","methods","addressItem","addressArr","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE","OKXCONNECTOR_STORAGE_CIPHER_METHOD","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","lastTimestamp","expireTimestamp","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","lineType","localConnectRequest","useShortLink","isOS","openDeeplinkWithFallback","stackDeepLink","standardDeeplink","shortUniversalLink","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","btc_provider_1","disconnectListener","providerMap","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","NameSpaceKeyBtc","BtcProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","okxwallet","requestAccounts","version","getVersion","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","getRequestId","newRequest","checkWalletMatch","injectProvider","getNamespaceKeyByChain","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceChainNameToChainId","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","stored","NOT_CONNECTED_ERROR","localAddress","connection","parse","localItem","connectEvent","items","TON_CHAINS","MAINNET","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","okxTonWallet","tonconnect","restoreConnection","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","injectParams","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","path","_provider","BtcMethods","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptosChainList","freeze","aptosInjectChainMap","aptos","searchNetwork","searchChainIdToInjectChainName","injectResult","hash","METHOD_NOT_SUPPORTED","chainName","accountChange","connectRequestWalletResponse","connectChain","aptosAccount","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","onAccountChange","newAccount","bs58_1","accountChangedSolanaPublicKeyHandler","solana","bufferResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","needProof","accountChangedBtcHandler","unisat","switchChain","BTC_CHAINS","FRACTAL","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","to","satBytes","psbtHexs","options","signatures","signPsbt","signPsbts","psbtHex","signedPsbt","pushPsbt","txHash","inscriptionId","sendInscription","hasFunction","ticker","amount","inscribeTransfer","runeid","sendRunes","functionName","itemNameSpace","accountChangedEVMHandler","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","sui","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","NAMES_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","misc_1","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","NameSpaceKeyCosmos","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","downloadUrl","standardUniversalLink","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","chains_1","callForSuccess","fn","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","chainName2IdMap","replaceChainIdToChainName","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","logVersion","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","sendRecordContent","warn","type_1","action_1","content_1","action","reverved1","reverved2","reverved3","reverved4","reverved5","reverved6","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","encoder","createCodec","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","shouldFallback","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","isInIOSChrome","isInIOSLine","isInIOSLark","isInIOSWeChat","href","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","shortUniversalLinkResult","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","deviceModel","model","browserName","browser","OKXBtcProvider","_1","caip","getAddressForChainId","ns","checkChainId","ret","errorData","sendBitcoin","toAddress","satoshis","feeRate","txhash","checkParameters","psbtResults","signAndPushPsbt","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","fromAddress","suffix","unexistKeys","OKXCosmosProvider","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","authInfoBytes","accountNumber","messageToBuffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","rpcProviders","providerOpts","specialDAppLineType","DeepLink","host","isSpecial","getOpenAppLinkType","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","replaceNamespace","aptosNameSpace","realNS","replaceNamespaceInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","soonProvider","eclipseProvider","optsTon","tonProvider","optsSui","suiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","caip2Chain","sessionProperties","showRequestModal","listenerCount","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","openAppLineType","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","needCheckRequestMethod","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","encodeMessage","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","trim","resultData","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","kaia_signTransaction","kaia_signTransaction_memo","kaia_signTransaction_Smart_Contract","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onModalStateChange","uri","isPC","testTonSdk","requestEVMAccountWithSession","blockExplorerUrls","nativeCurrency","symbol","decimals","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","uint8Array1","result1","nacl","PublicKey","toBytes","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","appendChild","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}