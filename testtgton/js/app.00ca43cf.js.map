{"version":3,"file":"js/app.00ca43cf.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/tonsdk/src/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/okx-connect-ton-inner.js","webpack://okxconnectdemo/../packages/tonsdk/src/okx-connect-ton.js","webpack://okxconnectdemo/../packages/tonsdk/src/parsers/rpc-parser.js","webpack://okxconnectdemo/../packages/tonsdk/src/parsers/send-transaction-parser.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge-connection-storage.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge/bridge-provider.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge/models/bridge-connection.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/browser-event-dispatcher.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/ton-connect-tracker.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/tracker-constants.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/types.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/address.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/constants.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/feature-support.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/url.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_RECV_DISCONNECT = exports.CONNECT_METHOD_DISCONNECT = exports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\nexports.CONNECT_METHOD_DISCONNECT = \"disconnect\";\nexports.CONNECT_METHOD_RECV_DISCONNECT = \"receiveDisconnect\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        this.connectorEnable = false;\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        if (inputObj.method && inputObj.method === commands_1.CONNECT_METHOD_PUSH) {\n                            // update topic expire check\n                            (0, log_1.logDebug)('checkExpire: update expire when get push');\n                            this.updateExpireLimit(topic);\n                        }\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check current topic is need expire\n                            if (fromRestore) {\n                                let checkExpired = this.checkExpire(topic);\n                                if (checkExpired) {\n                                    (0, log_1.logDebug)('disconnect From topic expire');\n                                    setTimeout(() => {\n                                        this.activateDisconnect();\n                                    }, 1000);\n                                }\n                                else {\n                                    (0, log_1.logDebug)('extends expire check');\n                                    this.updateExpireLimit(topic);\n                                }\n                            }\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n                this.connectorEnable = true;\n            });\n        });\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.refreshPackageId();\n                if (!this.connectorEnable) {\n                    log.logDebug('skip disconnect before connected relay');\n                    resolve();\n                    return;\n                }\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: disconnect command send');\n                    this.connectorEnable = false;\n                    resolve();\n                }));\n                const payload = {\n                    id: this.packageId.toString(),\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    method: commands_1.CONNECT_METHOD_DISCONNECT,\n                    params: {\n                        message: {\n                            topic: topic,\n                            ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                        }\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: skip reconnect send');\n                    // return await this.connector.connect();\n                }), payload);\n            }));\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            try {\n                yield this.sendDisconnect(this.currentTopic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined' && rawMsg.length > 0) {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: 'disconnect'\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache.topic) {\n            let lastTopic = topicExpireCache.topic;\n            if (lastTopic == topic) {\n                if (Date.now() > topicExpireCache.timestamp) {\n                    (0, log_1.logDebug)('checkExpire: connection is Expired');\n                    isExpired = true;\n                }\n            }\n            else {\n                (0, log_1.logDebug)('checkExpire: not same connection');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        let saveExpireItem = {\n            topic: topic,\n            timestamp: Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL // ttl ms later\n        };\n        this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE, saveExpireItem);\n    }\n    activateDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: 'disconnect'\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: this.currentTopic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_SESSION_LIVE_TTL = exports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\nexports.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL = 86400000;\nexports.OKXCONNECTOR_SESSION_LIVE_TTL = 86400000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    let linkType = (_b = sessionConfig.openAppLinkType) !== null && _b !== void 0 ? _b : protocol_1.OpenAppLinkType.UniversalLink;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: this.fixDappName(sessionConfig.dappInfo),\n                        requests: universalRequest,\n                        redirect: (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    let universalLink = \"\";\n                    let deepLink = \"\";\n                    if (openUniversalLink) {\n                        let linkInfo = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        universalLink = linkInfo.universalLink;\n                        deepLink = linkInfo.deepLink || \"\";\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest,\n                            }, linkType);\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(universalLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, linkType);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', universalLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag = \"\";\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    this.deviceInfo = Object.assign({}, session.wallet);\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, tag);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    fixDappName(dappInfo) {\n        try {\n            if (dappInfo.name.toLowerCase() === 'dapp portal') {\n                let title = document.title;\n                if (!title) {\n                    title = this.getOGSiteName();\n                }\n                if (title) {\n                    return Object.assign(Object.assign({}, dappInfo), { name: dappInfo.name + \" - \" + title });\n                }\n            }\n            return dappInfo;\n        }\n        catch (e) {\n            return dappInfo;\n        }\n    }\n    getOGSiteName() {\n        let metas = document.getElementsByTagName('meta');\n        let objectTitleList = [\"og:site_name\", \"og:title\", \"twitter:title\"];\n        for (let meta of metas) {\n            let property = meta.getAttribute('property');\n            for (let objectTitle of objectTitleList) {\n                if (property == objectTitle) {\n                    return meta.getAttribute(\"content\");\n                }\n            }\n        }\n        return undefined;\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector, openAppLinkType) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo, openAppLinkType);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo, openAppLinkType);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            let chainId;\n            if ('chainId' in request && request.chainId != null) {\n                chainId = request.chainId.toString();\n            }\n            try {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestStart_Log, \"\", (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '', request.method, (_d = (_c = this.deviceInfo) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : \"\", chainId);\n                (_e = this.getConnector()) === null || _e === void 0 ? void 0 : _e.send(request, {\n                    resolve: (response) => {\n                        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, response);\n                        if (('error' in response) && response.error) {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_c = (_b = this.getConnector()) === null || _b === void 0 ? void 0 : _b.getTag()) !== null && _c !== void 0 ? _c : '', request.method, (_e = (_d = this.deviceInfo) === null || _d === void 0 ? void 0 : _d.platform) !== null && _e !== void 0 ? _e : \"\", chainId);\n                        }\n                        else {\n                            (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestSuccess_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                        }\n                    },\n                    onAck: () => {\n                        var _a;\n                        (_a = requestAnswer === null || requestAnswer === void 0 ? void 0 : requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n            }\n            catch (error) {\n                (0, utils_1.reportEvent)(utils_1.OKXReportType.LOG, utils_1.Report_OKXConnectSDK_RequestError_Log, \"\", (_g = (_f = this.getConnector()) === null || _f === void 0 ? void 0 : _f.getTag()) !== null && _g !== void 0 ? _g : '', request.method, (_j = (_h = this.deviceInfo) === null || _h === void 0 ? void 0 : _h.platform) !== null && _j !== void 0 ? _j : \"\", chainId);\n                throw error;\n            }\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, (session) => {\n                var _a, _b;\n                onConnectResult(session);\n                if (session) {\n                    this.deviceInfo = Object.assign({}, session.wallet);\n                    (0, utils_1.reportEvent)(utils_1.OKXReportType.PAGE_IN, utils_1.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View, (_b = (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getTag()) !== null && _b !== void 0 ? _b : '');\n                }\n            }));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = exports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE = 'okx_connect_te_cache_key';\nexports.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE = 'okx_connect_twe_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (input.method && input.method === commands_1.CONNECT_METHOD_PUSH) {\n                                // update topic expire check\n                                (0, log_1.logDebug)('checkExpire: update expire when get push');\n                                this.updateExpireLimit(topic);\n                            }\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    sendDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_DISCONNECT,\n                params: {\n                    message: {\n                        topic: topic,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_DISCONNECT_TTL\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendRecvDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECV_DISCONNECT,\n                params: {\n                    topic: topic,\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            try {\n                yield this.sendDisconnect(topic);\n            }\n            catch (error) {\n                log.logError('send disconnect command failed', error);\n            }\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    const disconnectedTopics = fetchedMessages.result.disconnectedTopics;\n                    if (disconnectedTopics) {\n                        try {\n                            for (let i = 0; i < disconnectedTopics.length; i++) {\n                                const topicInfo = disconnectedTopics[i];\n                                if (topicInfo.topic) {\n                                    (0, log_1.logDebug)('send receive disconnect:', topicInfo.topic);\n                                    yield this.sendRecvDisconnect(topicInfo.topic);\n                                    // simulate to make disconnect payload\n                                    let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                                        requestId: topicInfo.publishedAt.toString(),\n                                        method: commands_1.CONNECT_METHOD_DISCONNECT\n                                    });\n                                    let disconnectMsg = {\n                                        messageId: topicInfo.publishedAt.toString(),\n                                        message: (0, safejson_1.safeJsonStringify)({\n                                            message: disconnectPayload\n                                        }),\n                                        topic: topicInfo.topic,\n                                        publishedAt: topicInfo.publishedAt\n                                    };\n                                    yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n                                }\n                            }\n                        }\n                        catch (error) {\n                            log.logError('disconnect topic fails', error);\n                        }\n                    }\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            // 6. check expire or extends expire\n                            let checkExpired = this.checkExpire(topicId);\n                            if (checkExpired) {\n                                (0, log_1.logDebug)('disconnect From topic expire');\n                                yield this.activateDisconnect(topicId);\n                            }\n                            else {\n                                (0, log_1.logDebug)('extends expire check');\n                                this.updateExpireLimit(topicId);\n                            }\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n    /**\n     * session expire check\n     * **/\n    checkExpire(topic) {\n        let isExpired = false;\n        if (topic.length == 0) {\n            (0, log_1.logDebug)('checkExpire: invalid topic');\n            return isExpired;\n        }\n        let topicExpireCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n        if (topicExpireCache && topicExpireCache instanceof Object) {\n            try {\n                let topicExpireMap = new Map(Object.entries(topicExpireCache));\n                let lastTimestamp = topicExpireMap.get(topic);\n                if (lastTimestamp) {\n                    if (Date.now() > lastTimestamp) {\n                        (0, log_1.logDebug)('checkExpire: connection is Expired');\n                        isExpired = true;\n                    }\n                }\n                else {\n                    (0, log_1.logDebug)('checkExpire: not same connection');\n                    isExpired = false;\n                }\n            }\n            catch (error) {\n                (0, log_1.logDebug)('checkExpire: cache error');\n                isExpired = false;\n            }\n        }\n        else {\n            (0, log_1.logDebug)('checkExpire: not topic records');\n            this.updateExpireLimit(topic);\n            isExpired = false;\n        }\n        return isExpired;\n    }\n    updateExpireLimit(topic) {\n        (0, log_1.logDebug)(`update expire limit for topic: ${topic}`);\n        try {\n            let cacheMapCache = this.getSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE);\n            let cacheMap = new Map();\n            if (cacheMapCache) {\n                cacheMap = new Map(Object.entries(cacheMapCache));\n            }\n            let expireTimestamp = Date.now() + constants_1.OKXCONNECTOR_SESSION_LIVE_TTL; // ttl ms later\n            cacheMap.set(topic, expireTimestamp);\n            this.saveSessionContent(storageconstants_1.OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE, Object.fromEntries(cacheMap));\n        }\n        catch (error) {\n            (0, log_1.logDebug)(\"update cache failed\");\n        }\n    }\n    activateDisconnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // simulate to make disconnect payload\n            let disconnectPayload = (0, safejson_1.safeJsonStringify)({\n                requestId: \"\",\n                method: commands_1.CONNECT_METHOD_DISCONNECT\n            });\n            let disconnectMsg = {\n                messageId: \"\",\n                message: (0, safejson_1.safeJsonStringify)({\n                    message: disconnectPayload\n                }),\n                topic: topic,\n                publishedAt: 0\n            };\n            yield this.connector.getMsgPayloadFromHistory(disconnectMsg);\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nconst protocol_1 = require(\"../protocol\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        let lineType = openAppLinkType !== null && openAppLinkType !== void 0 ? openAppLinkType : protocol_1.OpenAppLinkType.UniversalLink;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            let localConnectRequest = engineConnectInfo.connectRequest;\n            if (!(0, utils_1.useShortLink)()) {\n                localConnectRequest = Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" });\n            }\n            let { universalLink, deepLink } = (0, utils_1.getOKXLink)(localConnectRequest);\n            (0, utils_1.openOKXDeeplinkWithFallback)(deepLink, universalLink, lineType);\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openOKXDeeplinkWithFallback)(constants_1.standardDeeplink, constants_1.shortUniversalLink, lineType);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo, openAppLinkType) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                delete request.injectParams;\n            }\n            catch (e) {\n            }\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        case \"btc_inscribeTransfer\": {\n                            if (this.hasFunction('inscribeTransfer')) {\n                                const { ticker, amount } = (request.params || {});\n                                const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        case 'btc_sendRunes': {\n                            if (this.hasFunction('sendRunes')) {\n                                const { address, runeid, amount, options } = (request.injectParams || {});\n                                const result = yield window.okxwallet.unisat.sendRunes(address, runeid, amount, options);\n                                return {\n                                    method: request.method,\n                                    result: result,\n                                };\n                            }\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}' not support`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    hasFunction(functionName) {\n        if (window.okxwallet && window.okxwallet.unisat && typeof window.okxwallet.unisat[functionName] === 'function') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        ethParams = {\n                            method: request.method,\n                            params: request.injectParams,\n                        };\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.downloadUrl = exports.shortUniversalLink = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.shortUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? `https://link.okx.com/ul/connect`\n    : `https://www.okx.com/ul/connect`;\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\n// export const stackDeepLink:string = 'okx://web3/dapp/open'\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.shortUniversalLink = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.OpenAppLinkType = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nObject.defineProperty(exports, \"OpenAppLinkType\", { enumerable: true, get: function () { return misc_1.OpenAppLinkType; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\nObject.defineProperty(exports, \"shortUniversalLink\", { enumerable: true, get: function () { return constants_1.shortUniversalLink; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = exports.OpenAppLinkType = void 0;\nvar OpenAppLinkType;\n(function (OpenAppLinkType) {\n    OpenAppLinkType[\"UniversalLink\"] = \"universallink\";\n    OpenAppLinkType[\"DeepLink\"] = \"deeplink\";\n})(OpenAppLinkType || (exports.OpenAppLinkType = OpenAppLinkType = {}));\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logVersion = void 0;\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type_1, action_1, content_1) {\n    return __awaiter(this, arguments, void 0, function* (type, action, content, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n        try {\n            yield defaultReporter.sendRecordContent(content, type, action, reverved1, reverved2, reverved3, reverved4, reverved5, reverved6);\n        }\n        catch (e) {\n        }\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\nexports.logVersion = version;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.8.0';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version + log_1.logVersion;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content_1, type_1, action_1) {\n        return __awaiter(this, arguments, void 0, function* (content, type, action, reverved1 = undefined, reverved2 = undefined, reverved3 = undefined, reverved4 = undefined, reverved5 = undefined, reverved6 = undefined) {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua,\n                reverved1: reverved1,\n                reverved2: reverved2,\n                reverved3: reverved3,\n                reverved4: reverved4,\n                reverved5: reverved5,\n                reverved6: reverved6\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_OKXConnectSDK_RequestError_Log = exports.Report_OKXConnectSDK_RequestSuccess_Log = exports.Report_OKXConnectSDK_RequestStart_Log = exports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = exports.Report_OKXConnectSDKExtension_Module_Retry_Click = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = exports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Page_View = \"OKXConnectSDKExtension_ConnectDapp_Page_View\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View = \"OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_OKXConnectSDKExtension_Module_Retry_Click = \"OKXConnectSDKExtension_Module_Retry_Click\";\nexports.Report_OKXConnectSDKExtension_ConnectDapp_Button_Click = \"OKXConnectSDKExtension_ConnectDapp_Button_Click\";\nexports.Report_OKXConnectSDK_RequestStart_Log = \"Report_OKXConnectSDK_RequestStart_View\";\nexports.Report_OKXConnectSDK_RequestSuccess_Log = \"Report_OKXConnectSDK_RequestSuccess_View\";\nexports.Report_OKXConnectSDK_RequestError_Log = \"Report_OKXConnectSDK_RequestError_View\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    // if (!dappMetaData.icon){\n    //     throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR,\"icon is required\")\n    // }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl, universalLink, linkType) {\n    openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, false);\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl, universalLink, linkType, shouldFallback = true) {\n    var _a;\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", universalLink);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    let iosUseDeeplink = false;\n    if (linkType === protocol_1.OpenAppLinkType.UniversalLink) {\n        iosUseDeeplink = (0, utils_1.isInIOSChrome)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)();\n    }\n    else {\n        // OpenAppLinkType.DeepLink\n        iosUseDeeplink = isTelegram === false && (0, utils_1.isIos)();\n    }\n    if (shouldFallback) {\n        if (!(0, utils_1.isIos)()) {\n            fallbackToDownloadPage = () => {\n                if (!deepLinkOpened) {\n                    if (newWindow) {\n                        newWindow.open(universalLink, '_self');\n                    }\n                    else {\n                        window.open(universalLink, '_blank');\n                    }\n                }\n            };\n        }\n        else if (iosUseDeeplink) {\n            fallbackToDownloadPage = () => {\n                console.log(\"windowOpen --> fallbackToDownloadPage --\", deepLinkOpened);\n                if (!deepLinkOpened) {\n                    console.log(\"windowOpen --> fallbackToDownloadPage universal link\");\n                    window.open(universalLink, '_self');\n                }\n            };\n        }\n    }\n    if (!(0, utils_1.isIos)() || iosUseDeeplink) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen --> deeplinkUrl\");\n            window.location.href = deeplinkUrl;\n        }\n        if (shouldFallback) {\n            setTimeout(fallbackToDownloadPage, timeoutDuration);\n            let count = 0;\n            let interval = setInterval(() => {\n                count++;\n                console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n                if (document.hidden) {\n                    deepLinkOpened = true;\n                }\n                if (count > 10 || document.hidden) {\n                    clearInterval(interval);\n                    console.log(\"windowOpen :cleat: ${count}\");\n                }\n            }, 200);\n            window.addEventListener('blur', () => {\n                console.log(\"windowOpen :blur\");\n                deepLinkOpened = true;\n            }, { once: true });\n            document.addEventListener('visibilitychange', () => {\n                console.log(\"windowOpen :visibilitychange:\", document.visibilityState);\n                if (document.visibilityState === 'hidden') {\n                    deepLinkOpened = true;\n                }\n            });\n        }\n    }\n    else {\n        if (isTelegram) {\n            window.open(universalLink, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(universalLink, '_blank');\n            }\n            else {\n                window.open(universalLink, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        return connectRequest\n            ? { universalLink: getTelegramWalletTWAUrl(encodeTWAConnectURLParams(connectRequest), tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") }\n            : { universalLink: getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\") };\n    }\n    else {\n        let deepLink = connectRequest\n            ? `${protocol_1.standardDeeplink}?param=${encodeConnectParams(connectRequest)}`\n            : protocol_1.standardDeeplink;\n        if ((0, utils_1.useShortLink)()) {\n            let shortUniversalLinkResult = connectRequest\n                ? getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId)\n                : constants_1.shortUniversalLink;\n            return { universalLink: shortUniversalLinkResult, deepLink: deepLink };\n        }\n        else {\n            return { universalLink: getUniversalLink(deepLink), deepLink: deepLink };\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSChrome = isInIOSChrome;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSChrome() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('CriOS/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nexports.chainName2IdMap.set(\"sonic:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000073\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = exports.removeUrlLastSlash = exports.addPathToUrl = exports.createVersionInfo = exports.BrowserEventDispatcher = exports.createTransactionSigningFailedEvent = exports.createTransactionSignedEvent = exports.createTransactionSentForSignatureEvent = exports.createDisconnectionEvent = exports.createConnectionStartedEvent = exports.createConnectionRestoringStartedEvent = exports.createConnectionRestoringErrorEvent = exports.createConnectionRestoringCompletedEvent = exports.createConnectionErrorEvent = exports.createConnectionCompletedEvent = exports.createResponseVersionEvent = exports.createRequestVersionEvent = exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = exports.OKXTonConnect = void 0;\nvar okx_connect_ton_1 = require(\"./okx-connect-ton\");\nObject.defineProperty(exports, \"OKXTonConnect\", { enumerable: true, get: function () { return okx_connect_ton_1.OKXTonConnect; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\nvar tracker_1 = require(\"./tracker\");\nObject.defineProperty(exports, \"OKX_TON_CONNECTION_AND_TRANSACTION_EVENT\", { enumerable: true, get: function () { return tracker_1.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT; } });\nObject.defineProperty(exports, \"createRequestVersionEvent\", { enumerable: true, get: function () { return tracker_1.createRequestVersionEvent; } });\nObject.defineProperty(exports, \"createResponseVersionEvent\", { enumerable: true, get: function () { return tracker_1.createResponseVersionEvent; } });\nObject.defineProperty(exports, \"createConnectionCompletedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionErrorEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringCompletedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringErrorEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringStartedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringStartedEvent; } });\nObject.defineProperty(exports, \"createConnectionStartedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionStartedEvent; } });\nObject.defineProperty(exports, \"createDisconnectionEvent\", { enumerable: true, get: function () { return tracker_1.createDisconnectionEvent; } });\nObject.defineProperty(exports, \"createTransactionSentForSignatureEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSentForSignatureEvent; } });\nObject.defineProperty(exports, \"createTransactionSignedEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSignedEvent; } });\nObject.defineProperty(exports, \"createTransactionSigningFailedEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSigningFailedEvent; } });\nObject.defineProperty(exports, \"BrowserEventDispatcher\", { enumerable: true, get: function () { return tracker_1.BrowserEventDispatcher; } });\nObject.defineProperty(exports, \"createVersionInfo\", { enumerable: true, get: function () { return tracker_1.createVersionInfo; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"addPathToUrl\", { enumerable: true, get: function () { return utils_1.addPathToUrl; } });\nObject.defineProperty(exports, \"removeUrlLastSlash\", { enumerable: true, get: function () { return utils_1.removeUrlLastSlash; } });\nObject.defineProperty(exports, \"toUserFriendlyAddress\", { enumerable: true, get: function () { return utils_1.toUserFriendlyAddress; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonConnectInner = void 0;\nconst bridge_provider_1 = require(\"./provider/bridge/bridge-provider\");\nconst core_1 = require(\"@okxconnect/core\");\nconst feature_support_1 = require(\"./utils/feature-support\");\nconst ton_connect_tracker_1 = require(\"./tracker/ton-connect-tracker\");\nconst send_transaction_parser_1 = require(\"./parsers/send-transaction-parser\");\nconst bridge_connection_storage_1 = require(\"./provider/bridge-connection-storage\");\nconst constants_1 = require(\"./utils/constants\");\nclass OKXTonConnectInner {\n    constructor(options) {\n        this._wallet = null;\n        this.provider = null;\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.openUniversalLink = this.provider ? this.provider.openUniversalLink : false;\n        (0, core_1.checkMetaData)(options.metaData);\n        if (!options.metaData) {\n            (0, core_1.logDebug)(\"OKXTonConnect constructor error: options.metaData is nil\");\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'dapp metaData can not be null');\n        }\n        (0, core_1.logDebug)(\"OKXTonConnect constructor options:\", JSON.stringify(options));\n        this.dappSettings = {\n            metaData: Object.assign(Object.assign({}, options.metaData), { url: window.location.hostname, origin: window.location.origin }),\n        };\n        if (!options.connectors || options.connectors.length == 0) {\n            options.connectors = [new core_1.AppwalletConnector()];\n        }\n        this.connectors = options.connectors;\n        this.tracker = new ton_connect_tracker_1.TonConnectTracker({\n            OKXtonConnectSdkVersion: constants_1.OKXtonConnectSdkVersion\n        });\n        this.storage = new core_1.Storage(constants_1.OKXCONNECTOR_TON_KEY + this.dappSettings.metaData.name + constants_1.OKXTON_STORAGE_PREFIX, constants_1.OKXCONNECTOR_TON_KEY);\n        this.bridgeConnectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(this.storage);\n    }\n    /**\n     * Shows if the wallet is connected right now.\n     */\n    get connected() {\n        return this._wallet !== null;\n    }\n    /**\n     * Current connected account or null if no account is connected.\n     */\n    get account() {\n        var _a;\n        return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.account) || null;\n    }\n    /**\n     * Current connected wallet or null if no account is connected.\n     */\n    get wallet() {\n        return this._wallet;\n    }\n    set wallet(value) {\n        this._wallet = value;\n        this.statusChangeSubscriptions.forEach(callback => callback(this._wallet));\n    }\n    connect(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> connect_1 >> request:', request);\n            if (this.connected) {\n                (0, core_1.logError)(\"It's already connected to OKX Wallet, please call disconnect() first\");\n            }\n            yield ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.closeConnection(false, true));\n            if (!this.provider) {\n                this.provider = new bridge_provider_1.BridgeProvider(this.storage, this.dappSettings.metaData.name, this.connectors);\n            }\n            this.provider.listen(this.walletEventsListener.bind(this));\n            this.tracker.trackConnectionStarted();\n            return yield this.provider.connect(this.createConnectRequest(request), request === null || request === void 0 ? void 0 : request.redirect, request === null || request === void 0 ? void 0 : request.openUniversalLink, request === null || request === void 0 ? void 0 : request.tmaReturnUrl);\n        });\n    }\n    walletEventsListener(e) {\n        (0, core_1.logDebug)('ton-Connect ==>> walletEventsListener_1 >> e:', e);\n        switch (e.event) {\n            case 'connect':\n                this.onWalletConnected(e.payload);\n                break;\n            case 'connect_error':\n                this.onWalletConnectError(e.payload);\n                break;\n            case 'disconnect':\n                this.onWalletDisconnected('wallet');\n        }\n    }\n    onWalletConnected(connectEvent) {\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnected_1 >> connectEvent:', connectEvent);\n        const tonAccountItem = connectEvent.items.find(item => item.name === 'ton_addr');\n        const tonProofItem = connectEvent.items.find(item => item.name === 'ton_proof');\n        if (!tonAccountItem) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'ton_addr connection item was not found');\n        }\n        const wallet = {\n            device: connectEvent.device,\n            provider: this.provider.type,\n            account: {\n                address: tonAccountItem.address,\n                chain: tonAccountItem.network,\n                walletStateInit: tonAccountItem.walletStateInit,\n                publicKey: tonAccountItem.publicKey\n            }\n        };\n        if (tonProofItem) {\n            wallet.connectItems = {\n                tonProof: tonProofItem\n            };\n        }\n        this.wallet = wallet;\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnected_2 >> wallet:', wallet);\n        this.tracker.trackConnectionCompleted(wallet);\n    }\n    onWalletConnectError(connectEventError) {\n        var _a;\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnectError_1 >> connectEventError:', connectEventError);\n        const error = new core_1.OKXConnectError(connectEventError.code, connectEventError.message);\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnectError_1 >> error:', error);\n        this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        this.tracker.trackConnectionError((_a = connectEventError.message) !== null && _a !== void 0 ? _a : \"\", connectEventError.code);\n    }\n    onWalletDisconnected(scope) {\n        this.tracker.trackDisconnection(this.wallet, scope);\n        this.wallet = null;\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> disconnect_1');\n            if (!this.connected) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, 'wallet is not connected');\n            }\n            (0, core_1.logDebug)('ton-Connect ==>> disconnect_222');\n            this.onWalletDisconnected('dapp');\n            yield ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect());\n        });\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> restoreConnection_1');\n            this.tracker.trackConnectionRestoringStarted();\n            let provider = null;\n            try {\n                provider = yield bridge_provider_1.BridgeProvider.fromStorage(this.storage, this.dappSettings.metaData.name, this.connectors);\n                // let isProviderValid = provider?.isCryptoEnable()\n                // if (!isProviderValid) {\n                //     this.tracker.trackConnectionRestoringError('Provider is not restored');\n                //     await this.bridgeConnectionStorage.removeConnection();\n                //     provider?.closeConnection();\n                //     provider = null;\n                //     return;\n                // }\n            }\n            catch (_b) {\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                yield this.bridgeConnectionStorage.removeConnection();\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                provider = null;\n                return;\n            }\n            if (!provider) {\n                (0, core_1.logError)('Provider is not restored');\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                return;\n            }\n            (0, core_1.logDebug)('ton-Connect ==>> restoreConnection_2 ==>> Provider is restored ');\n            (_a = this.provider) === null || _a === void 0 ? void 0 : _a.closeConnection(true, false);\n            this.provider = provider;\n            provider.listen(this.walletEventsListener.bind(this));\n            yield this.provider.restoreConnection();\n            if (this.connected) {\n                this.tracker.trackConnectionRestoringCompleted(this.wallet);\n            }\n            else {\n                this.tracker.trackConnectionRestoringError('Connection restoring failed');\n            }\n        });\n    }\n    sendTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_1', transaction);\n            this.checkConnection();\n            (0, feature_support_1.checkSendTransactionSupport)(this.wallet.device.features, {\n                requiredMessagesNumber: transaction.messages.length\n            });\n            this.tracker.trackTransactionSentForSignature(this.wallet, transaction);\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_2 ==>> check params');\n            const { validUntil } = transaction, tx = __rest(transaction, [\"validUntil\"]);\n            const from = transaction.from || this.account.address;\n            let network = this.account.chain;\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_2 ==>> await sendRequest', network);\n            if ((0, core_1.isIos)() && !(options === null || options === void 0 ? void 0 : options.doNotOpenWallet)) {\n                (_a = this.provider) === null || _a === void 0 ? void 0 : _a.openOKXWallet();\n            }\n            const response = yield this.provider.sendRequest(send_transaction_parser_1.sendTransactionParser.convertToRpcRequest(Object.assign(Object.assign({}, tx), { valid_until: validUntil, from,\n                network })), {\n                onRequestSent: () => {\n                    var _a, _b;\n                    if (!(0, core_1.isIos)() && !(options === null || options === void 0 ? void 0 : options.doNotOpenWallet)) {\n                        (_a = this.provider) === null || _a === void 0 ? void 0 : _a.openOKXWallet();\n                    }\n                    (_b = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _b === void 0 ? void 0 : _b.call(options);\n                }\n            });\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_3 ==>>sendRequest response:', response);\n            if (send_transaction_parser_1.sendTransactionParser.isError(response)) {\n                this.tracker.trackTransactionSigningFailed(this.wallet, transaction, response.error.message, response.error.code);\n                throw new core_1.OKXConnectError(response.error.code, response.error.message);\n            }\n            const result = send_transaction_parser_1.sendTransactionParser.convertFromRpcResponse(response);\n            this.tracker.trackTransactionSigned(this.wallet, transaction, result);\n            return result;\n        });\n    }\n    checkConnection() {\n        (0, core_1.logDebug)('ton-Connect ==>> checkConnection');\n        if (!this.connected) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, \"Wallet not connected\");\n        }\n    }\n    createConnectRequest(request) {\n        (0, core_1.logDebug)('ton-Connect ==>> createConnectRequest');\n        const params = {\n            ton_addr: {\n                name: 'ton_addr'\n            }\n        };\n        if (request === null || request === void 0 ? void 0 : request.tonProof) {\n            params.ton_proof = {\n                name: 'ton_proof',\n                payload: request.tonProof\n            };\n        }\n        return {\n            dappInfo: this.dappSettings.metaData,\n            params: params\n        };\n    }\n    static getWallets() {\n        return this.walletsList;\n    }\n}\nexports.OKXTonConnectInner = OKXTonConnectInner;\nOKXTonConnectInner.walletsList = [(0, core_1.creatOKXWalletInfo)()];\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonConnect = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst okx_connect_ton_inner_1 = require(\"./okx-connect-ton-inner\");\nclass OKXTonConnect {\n    constructor(options) {\n        try {\n            (0, core_1.logDebug)('OKXTonConnect constructor called');\n            if (window && window.okxConnectTonsdkinwindow && window.okxConnectTonsdkinwindow instanceof okx_connect_ton_inner_1.OKXTonConnectInner) {\n                this.tonInner = window.okxConnectTonsdkinwindow;\n                (0, core_1.logDebug)('OKXTonConnect constructor old called');\n            }\n            else {\n                this.tonInner = new okx_connect_ton_inner_1.OKXTonConnectInner(options);\n                (0, core_1.logDebug)('OKXTonConnect constructor new called');\n                if (window) {\n                    window.okxConnectTonsdkinwindow = this.tonInner;\n                }\n            }\n        }\n        catch (error) {\n            throw error;\n        }\n    }\n    /**\n     * Shows if the wallet is connected right now.\n     */\n    get connected() {\n        return this.tonInner.connected;\n    }\n    get openUniversalLink() {\n        return this.tonInner.openUniversalLink;\n    }\n    get provider() {\n        return this.tonInner.provider;\n    }\n    /**\n     * Current connected account or null if no account is connected.\n     */\n    get account() {\n        return this.tonInner.account;\n    }\n    /**\n     * Current connected wallet or null if no account is connected.\n     */\n    get wallet() {\n        return this.tonInner.wallet;\n    }\n    set wallet(value) {\n        this.tonInner.wallet = value;\n    }\n    connect(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.connect(request);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.disconnect();\n        });\n    }\n    onStatusChange(callback, errorsHandler) {\n        return this.tonInner.onStatusChange(callback, errorsHandler);\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.restoreConnection();\n        });\n    }\n    sendTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.sendTransaction(transaction, options);\n        });\n    }\n    static getWallets() {\n        return okx_connect_ton_inner_1.OKXTonConnectInner.getWallets();\n    }\n}\nexports.OKXTonConnect = OKXTonConnect;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RpcParser = void 0;\nclass RpcParser {\n    isError(response) {\n        return 'error' in response;\n    }\n}\nexports.RpcParser = RpcParser;\n","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendTransactionParser = void 0;\nconst rpc_parser_1 = require(\"./rpc-parser\");\nclass SendTransactionParser extends rpc_parser_1.RpcParser {\n    convertToRpcRequest(request) {\n        const { redirect } = request, params = __rest(request, [\"redirect\"]);\n        return {\n            method: \"ton_sendTransaction\",\n            redirect: redirect,\n            params: params,\n        };\n    }\n    convertFromRpcResponse(rpcResponse) {\n        return {\n            boc: rpcResponse.result.toString()\n        };\n    }\n}\nexports.sendTransactionParser = new SendTransactionParser();\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BridgeConnectionStorage = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass BridgeConnectionStorage {\n    constructor(storage) {\n        this.storage = storage;\n        this.storeKey = 'ton_connect_info_adapter_universal';\n    }\n    storeConnection(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> storeConnection ==>> connection:\", connection);\n            return this.storage.saveContent(JSON.stringify(connection), this.storeKey);\n        });\n    }\n    removeConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> removeConnection\");\n            return this.storage.clearCache(this.storeKey);\n        });\n    }\n    getConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = this.storage.getItem(this.storeKey);\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> getConnection ==>>this.storage: \", this.storage);\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                return null;\n            }\n            try {\n                const content = stored === null || stored === void 0 ? void 0 : stored.content;\n                if (content) {\n                    let connection;\n                    connection = JSON.parse(content);\n                    (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> getConnection ==>>connection: \", connection);\n                    return connection;\n                }\n                else {\n                    return null;\n                }\n            }\n            catch (error) {\n                return null;\n            }\n        });\n    }\n    getHttpConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'Trying to read HTTP connection source while nothing is stored');\n            }\n            return connection;\n        });\n    }\n    storeLastWalletEventId(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && ('connectEvent' in connection)) {\n                connection.lastWalletEventId = id;\n                return this.storeConnection(connection);\n            }\n        });\n    }\n    getLastWalletEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'lastWalletEventId' in connection) {\n                return connection.lastWalletEventId;\n            }\n            return undefined;\n        });\n    }\n}\nexports.BridgeConnectionStorage = BridgeConnectionStorage;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BridgeProvider = void 0;\nconst bridge_connection_1 = require(\"./models/bridge-connection\");\nconst core_1 = require(\"@okxconnect/core\");\nconst bridge_connection_storage_1 = require(\"../bridge-connection-storage\");\nconst constants_1 = require(\"../../utils/constants\");\nconst ton_connect_tracker_1 = require(\"../../tracker/ton-connect-tracker\");\nclass BridgeProvider {\n    constructor(storage, appname = undefined, connectors) {\n        this.storage = storage;\n        this.type = 'http';\n        this.listeners = [];\n        this.walletConnectionSource = { \"universalLink\": core_1.standardUniversalLink };\n        this.openUniversalLink = false;\n        this.engine = new core_1.Engine(appname + constants_1.OKXTON_STORAGE_PREFIX);\n        this.engine.registerConnector(connectors);\n        this.connectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(storage);\n        this.tracker = new ton_connect_tracker_1.TonConnectTracker({\n            OKXtonConnectSdkVersion: constants_1.OKXtonConnectSdkVersion\n        });\n        (0, core_1.getDefaultReporter)().configVersionAndSide('tonsdk-1.5.2', 'dapp', appname);\n    }\n    static fromStorage(storage_1) {\n        return __awaiter(this, arguments, void 0, function* (storage, appname = undefined, connectors) {\n            (0, core_1.logDebug)('bridge-provider ==>> fromStorage ==>>storage:', storage);\n            (0, core_1.reportLog)('bridge-provider ==>> fromStorage');\n            const bridgeConnectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(storage);\n            const connection = yield bridgeConnectionStorage.getHttpConnection();\n            if ((0, bridge_connection_1.isPendingConnectionHttp)(connection)) {\n                return null;\n            }\n            const provider = new BridgeProvider(storage, appname, connectors);\n            provider.openUniversalLink = connection.openUniversalLink;\n            return provider;\n        });\n    }\n    isCryptoEnable() {\n        const cryptoEnable = this.engine.connectionManager.getCryptoKeyEnable();\n        return cryptoEnable;\n    }\n    connect(message, redirect, openUniversalLink, tmaReturnUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>message:', message);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>redirect:', redirect);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>openUniversalLink:', openUniversalLink);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>tmaReturnUrl:', tmaReturnUrl);\n            (0, core_1.reportLog)('bridge-provider ==>> connect');\n            return new Promise((resolve, reject) => {\n                try {\n                    this.openUniversalLink = openUniversalLink;\n                    if (this.openUniversalLink === undefined) {\n                        this.openUniversalLink = (0, core_1.isMobileUserAgent)();\n                    }\n                    let tonNameSpace = {\n                        namespace: \"ton\",\n                        chains: [\"ton:-239\"],\n                        params: message.params,\n                    };\n                    let tonRequest = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: [tonNameSpace]\n                    };\n                    let engineRequest = [];\n                    // Easy to identify tonsdk\n                    if (message.params.ton_addr) {\n                        engineRequest.push(message.params.ton_addr);\n                    }\n                    if (message.params.ton_proof) {\n                        engineRequest.push(message.params.ton_proof);\n                    }\n                    engineRequest.push(tonRequest); //Universal data\n                    let config = {\n                        dappInfo: message.dappInfo,\n                        openUniversalUrl: this.openUniversalLink,\n                        redirect: redirect,\n                        tmaReturnUrl: tmaReturnUrl,\n                    };\n                    this.engine.universalConnect(engineRequest, config, (info) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: info>>>> ${JSON.stringify(info)}`);\n                        try {\n                            const base64Encoded = (0, core_1.encodeConnectParams)(info.connectRequest);\n                            const deepLink = (0, core_1.getAppWalletDeepLink)(base64Encoded);\n                            const universalUrl = (0, core_1.getUniversalLink)(deepLink);\n                            this.tracker.trackConnectionInfoBeforeJump(info);\n                            resolve(universalUrl);\n                        }\n                        catch (error) {\n                            reject(error);\n                        }\n                    }).then((session) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: success>>>> ${JSON.stringify(session)}`);\n                        this.connectSuccessHandle(session);\n                    }).catch((e) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: catch>>>> ${JSON.stringify(e)}`);\n                        const errorMessage = {\n                            event: 'connect_error',\n                            requestId: Number(Date.now()),\n                            payload: {\n                                code: e.code,\n                                message: e.message,\n                            },\n                        };\n                        (0, core_1.logDebug)('bridge-provider ==>> connectListener_4 ==>>connect_error:', errorMessage);\n                        this.listeners.forEach(listener => listener(errorMessage));\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    console.error('bridge-provider connect try catch error:>>>', JSON.stringify(error));\n                    reject(error);\n                }\n            });\n        });\n    }\n    listen(callback) {\n        this.listeners.push(callback);\n        return () => (this.listeners = this.listeners.filter(listener => listener !== callback));\n    }\n    disconnectListener() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> disconnectListener');\n            (0, core_1.reportLog)('bridge-provider ==>> disconnectListener');\n            const disconnectMessage = {\n                event: 'disconnect',\n                requestId: Number(1),\n                payload: {},\n            };\n            this.listeners.forEach(listener => listener(disconnectMessage));\n            yield this.closeConnection();\n        });\n    }\n    connectSuccessHandle(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                const namespaces = (_a = response.namespaces) === null || _a === void 0 ? void 0 : _a[\"ton\"];\n                const payload = namespaces.payload;\n                const wallet = response.wallet;\n                if (!namespaces || !payload || !wallet || !payload.ton_addr) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                }\n                const ton_addr = payload.ton_addr;\n                const sessionConfig = response.sessionConfig;\n                let itemArr = [];\n                if (payload.ton_addr) {\n                    itemArr.push(payload.ton_addr);\n                }\n                if (payload.ton_proof) {\n                    itemArr.push(payload.ton_proof);\n                }\n                const tonDeviceInfo = {\n                    platform: wallet.platform,\n                    appName: wallet.appName,\n                    appVersion: wallet.appVersion,\n                    maxProtocolVersion: wallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const tonConnectInfo = {\n                    type: 'http',\n                    lastWalletEventId: Number(Date.now()),\n                    connectEvent: {\n                        event: 'connect',\n                        payload: {\n                            items: itemArr,\n                            device: tonDeviceInfo,\n                        },\n                    },\n                    connectionSource: this.walletConnectionSource,\n                    channelId: response.topic,\n                    openUniversalLink: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n                    dappInfo: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.dappInfo\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_2 ==>>storeConnection:', tonConnectInfo);\n                yield this.connectionStorage.storeConnection(tonConnectInfo);\n                (_b = this.engine) === null || _b === void 0 ? void 0 : _b.addDisconnectListener(this.disconnectListener.bind(this));\n                const successMessage = {\n                    event: 'connect',\n                    requestId: tonConnectInfo.lastWalletEventId,\n                    payload: tonConnectInfo.connectEvent.payload,\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_3 ==>>listeners.forEach:', successMessage);\n                this.listeners.forEach(listener => listener(successMessage));\n            }\n            catch (error) {\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_4 ==>>error:', error);\n                const errorMessage = {\n                    event: 'connect_error',\n                    requestId: Number(Date.now()),\n                    payload: {\n                        code: core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n                        message: \"Connect success  connectSuccessHandle response error\",\n                    },\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_4 ==>>connect_error:', errorMessage);\n                this.listeners.forEach(listener => listener(errorMessage));\n            }\n        });\n    }\n    closeConnection() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false, needOpenUrl = false) {\n            var _a, _b;\n            (0, core_1.logDebug)('bridge-provider ==>> closeConnection ==>>fromRestore:', fromRestore, ' needOpenUrl:', needOpenUrl);\n            (0, core_1.reportLog)('bridge-provider ==>> closeConnection');\n            this.listeners = [];\n            if (!needOpenUrl) {\n                yield ((_a = this.engine) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n            }\n            if (!fromRestore) {\n                (_b = this.engine) === null || _b === void 0 ? void 0 : _b.clearData();\n                yield this.connectionStorage.removeConnection();\n            }\n        });\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_1');\n            (0, core_1.reportLog)('bridge-provider ==>> restoreConnection');\n            const storedConnection = yield this.connectionStorage.getHttpConnection();\n            if ((0, bridge_connection_1.isPendingConnectionHttp)(storedConnection)) {\n                return;\n            }\n            const storedWalletName = storedConnection.connectEvent.payload.device.appName;\n            const storedWalletTag = (0, core_1.getTagByappName)(storedWalletName);\n            const isInjectWallet = storedWalletTag === core_1.OKX_INJECT_WALLET;\n            const cryptoEnable = this.engine.connectionManager.getCryptoKeyEnable();\n            if (!storedConnection || (!cryptoEnable && !isInjectWallet)) {\n                return;\n            }\n            (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_2 ==>>storedConnection.channelId:', storedConnection.channelId);\n            if (storedConnection.channelId) {\n                try {\n                    const successMessage = {\n                        event: 'connect',\n                        requestId: Number(0),\n                        payload: storedConnection.connectEvent.payload,\n                    };\n                    this.listeners.forEach(listener => listener(successMessage));\n                    this.engine.setConnectConnector(storedConnection.connectEvent.payload.device);\n                    const channelId = storedConnection.channelId;\n                    (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_3 ==>>this.engine.restoreConnect:', channelId);\n                    (_a = this.engine) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(this.disconnectListener.bind(this));\n                    yield this.engine.restoreconnectFromTopic(channelId);\n                }\n                catch (e) {\n                    (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_4 ==>>closeConnection_1');\n                    yield this.closeConnection();\n                }\n            }\n            else {\n                (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_4 ==>>closeConnection_2');\n                yield this.closeConnection();\n            }\n        });\n    }\n    openOKXWallet() {\n        (0, core_1.logDebug)('bridge-provider ==>> openOKXWallet', this.openUniversalLink);\n        (0, core_1.reportLog)('bridge-provider ==>> openOKXWallet');\n        if (this.openUniversalLink) {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> disconnect_1');\n            (0, core_1.reportLog)('bridge-provider ==>> disconnect');\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => {\n                    if (!called) {\n                        called = true;\n                        this.closeConnection().then(resolve);\n                    }\n                };\n                try {\n                    yield this.sendRequest({ method: 'disconnect' }, { onRequestSent: onRequestSent, attempts: 1 });\n                }\n                catch (e) {\n                    if (!called) {\n                        this.closeConnection().then(resolve);\n                    }\n                }\n                finally {\n                    onRequestSent();\n                }\n            }));\n        });\n    }\n    sendRequest(request, options, ttl) {\n        (0, core_1.logDebug)('bridge-provider ==>> sendRequest');\n        (0, core_1.reportLog)('bridge-provider ==>> sendRequest');\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield ((_a = this.engine) === null || _a === void 0 ? void 0 : _a.send(Object.assign(Object.assign({}, request), { chainId: core_1.TON_CHAINS.MAINNET }), {\n                    resolve: function (response) {\n                        resolve(response);\n                    },\n                    onAck: function () {\n                        var _a;\n                        (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);\n                    }\n                }, ttl));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }));\n    }\n    connectorOpenWallet() {\n        this.engine.openWallet();\n    }\n}\nexports.BridgeProvider = BridgeProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isPendingConnectionHttp = isPendingConnectionHttp;\nfunction isPendingConnectionHttp(connection) {\n    return !('connectEvent' in connection);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserEventDispatcher = void 0;\n/**\n * A concrete implementation of EventDispatcher that dispatches events to the browser window.\n */\nclass BrowserEventDispatcher {\n    constructor() {\n        /**\n         * The window object, possibly undefined in a server environment.\n         * @private\n         */\n        this.window = window;\n    }\n    /**\n     * Dispatches an event with the given name and details to the browser window.\n     * @param eventName - The name of the event to dispatch.\n     * @param eventDetails - The details of the event to dispatch.\n     * @returns A promise that resolves when the event has been dispatched.\n     */\n    dispatchEvent(eventName, eventDetails) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const event = new CustomEvent(eventName, { detail: eventDetails });\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.dispatchEvent(event);\n        });\n    }\n    /**\n     * Adds an event listener to the browser window.\n     * @param eventName - The name of the event to listen for.\n     * @param listener - The listener to add.\n     * @param options - The options for the listener.\n     * @returns A function that removes the listener.\n     */\n    addEventListener(eventName, listener, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.addEventListener(eventName, listener, options);\n            return () => {\n                var _a;\n                return (_a = this.window) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, listener);\n            };\n        });\n    }\n}\nexports.BrowserEventDispatcher = BrowserEventDispatcher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserEventDispatcher = exports.createVersionInfo = exports.createTransactionSigningFailedEvent = exports.createTransactionSignedEvent = exports.createTransactionSentForSignatureEvent = exports.createDisconnectionEvent = exports.createConnectionStartedEvent = exports.createConnectionRestoringStartedEvent = exports.createConnectionRestoringErrorEvent = exports.createConnectionRestoringCompletedEvent = exports.createConnectionErrorEvent = exports.createConnectionCompletedEvent = exports.createResponseVersionEvent = exports.createRequestVersionEvent = exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = void 0;\nvar tracker_constants_1 = require(\"./tracker-constants\");\nObject.defineProperty(exports, \"OKX_TON_CONNECTION_AND_TRANSACTION_EVENT\", { enumerable: true, get: function () { return tracker_constants_1.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT; } });\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"createRequestVersionEvent\", { enumerable: true, get: function () { return types_1.createRequestVersionEvent; } });\nObject.defineProperty(exports, \"createResponseVersionEvent\", { enumerable: true, get: function () { return types_1.createResponseVersionEvent; } });\nObject.defineProperty(exports, \"createConnectionCompletedEvent\", { enumerable: true, get: function () { return types_1.createConnectionCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionErrorEvent\", { enumerable: true, get: function () { return types_1.createConnectionErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringCompletedEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringErrorEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringStartedEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringStartedEvent; } });\nObject.defineProperty(exports, \"createConnectionStartedEvent\", { enumerable: true, get: function () { return types_1.createConnectionStartedEvent; } });\nObject.defineProperty(exports, \"createDisconnectionEvent\", { enumerable: true, get: function () { return types_1.createDisconnectionEvent; } });\nObject.defineProperty(exports, \"createTransactionSentForSignatureEvent\", { enumerable: true, get: function () { return types_1.createTransactionSentForSignatureEvent; } });\nObject.defineProperty(exports, \"createTransactionSignedEvent\", { enumerable: true, get: function () { return types_1.createTransactionSignedEvent; } });\nObject.defineProperty(exports, \"createTransactionSigningFailedEvent\", { enumerable: true, get: function () { return types_1.createTransactionSigningFailedEvent; } });\nObject.defineProperty(exports, \"createVersionInfo\", { enumerable: true, get: function () { return types_1.createVersionInfo; } });\nvar browser_event_dispatcher_1 = require(\"./browser-event-dispatcher\");\nObject.defineProperty(exports, \"BrowserEventDispatcher\", { enumerable: true, get: function () { return browser_event_dispatcher_1.BrowserEventDispatcher; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonConnectTracker = void 0;\nconst types_1 = require(\"./types\");\nconst browser_event_dispatcher_1 = require(\"./browser-event-dispatcher\");\n/**\n * Tracker for TonConnect user actions, such as transaction signing, connection, etc.\n *\n * List of events:\n *  * `connection-started`: when a user starts connecting a wallet.\n *  * `connection-completed`: when a user successfully connected a wallet.\n *  * `connection-error`: when a user cancels a connection or there is an error during the connection process.\n *  * `connection-restoring-started`: when the dApp starts restoring a connection.\n *  * `connection-restoring-completed`: when the dApp successfully restores a connection.\n *  * `connection-restoring-error`: when the dApp fails to restore a connection.\n *  * `disconnection`: when a user starts disconnecting a wallet.\n *  * `transaction-sent-for-signature`: when a user sends a transaction for signature.\n *  * `transaction-signed`: when a user successfully signs a transaction.\n *  * `transaction-signing-failed`: when a user cancels transaction signing or there is an error during the signing process.\n *\n\n *\n * @internal\n */\nclass TonConnectTracker {\n    /**\n     * Version of the library.\n     */\n    get version() {\n        return (0, types_1.createVersionInfo)({\n            okx_ton_connect_sdk_lib: this.OKXtonConnectSdkVersion,\n            okx_connect_ui_lib: this.OKXConnectUiVersion,\n        });\n    }\n    constructor(options) {\n        /**\n         * Event prefix for user actions.\n         * @private\n         */\n        this.eventPrefix = 'okx-ton-connect-';\n        this.OKXConnectUiVersion = null;\n        this.eventDispatcher = new browser_event_dispatcher_1.BrowserEventDispatcher();\n        this.OKXtonConnectSdkVersion = options.OKXtonConnectSdkVersion;\n        this.init().catch();\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.setRequestVersionHandler();\n                this.OKXConnectUiVersion = yield this.requestTonConnectUiVersion();\n            }\n            catch (e) { }\n        });\n    }\n    /**\n     * Set request version handler.\n     * @private\n     */\n    setRequestVersionHandler() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventDispatcher.addEventListener('okx-ton-connect-request-version', () => __awaiter(this, void 0, void 0, function* () {\n                yield this.eventDispatcher.dispatchEvent('okx-ton-connect-response-version', (0, types_1.createResponseVersionEvent)(this.OKXtonConnectSdkVersion));\n            }));\n        });\n    }\n    /**\n     * Request TonConnect UI version.\n     * @private\n     */\n    requestTonConnectUiVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    yield this.eventDispatcher.addEventListener('okx-connect-ui-response-version', (event) => {\n                        resolve(event.detail.version);\n                    }, { once: true });\n                    yield this.eventDispatcher.dispatchEvent('okx-connect-ui-request-version', (0, types_1.createRequestVersionEvent)());\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    /**\n     * Emit user action event to the window.\n     * @param eventDetails\n     * @private\n     */\n    dispatchUserActionEvent(eventDetails) {\n        try {\n            this.eventDispatcher\n                .dispatchEvent(`${this.eventPrefix}${eventDetails.type}`, eventDetails)\n                .catch();\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection init event.\n     * @param args\n     */\n    trackConnectionStarted(...args) {\n        try {\n            const event = (0, types_1.createConnectionStartedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection connecting event.\n     * @param args\n     */\n    trackConnectionDeepLink(...args) {\n        try {\n            const event = (0, types_1.createConnectionDeepLinkEvent)(...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection success event.\n     * @param args\n     */\n    trackConnectionCompleted(...args) {\n        try {\n            const event = (0, types_1.createConnectionCompletedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    trackConnectionInfoBeforeJump(args) {\n        try {\n            const event = (0, types_1.createConnectionInfoBeforeJumpEvent)(args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection error event.\n     * @param args\n     */\n    trackConnectionError(...args) {\n        try {\n            const event = (0, types_1.createConnectionErrorEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring init event.\n     * @param args\n     */\n    trackConnectionRestoringStarted(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringStartedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring success event.\n     * @param args\n     */\n    trackConnectionRestoringCompleted(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringCompletedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring error event.\n     * @param args\n     */\n    trackConnectionRestoringError(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringErrorEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track disconnect event.\n     * @param args\n     */\n    trackDisconnection(...args) {\n        try {\n            const event = (0, types_1.createDisconnectionEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction init event.\n     * @param args\n     */\n    trackTransactionSentForSignature(...args) {\n        try {\n            const event = (0, types_1.createTransactionSentForSignatureEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction signed event.\n     * @param args\n     */\n    trackTransactionSigned(...args) {\n        try {\n            const event = (0, types_1.createTransactionSignedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction error event.\n     * @param args\n     */\n    trackTransactionSigningFailed(...args) {\n        try {\n            const event = (0, types_1.createTransactionSigningFailedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n}\nexports.TonConnectTracker = TonConnectTracker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = void 0;\nvar OKX_TON_CONNECTION_AND_TRANSACTION_EVENT;\n(function (OKX_TON_CONNECTION_AND_TRANSACTION_EVENT) {\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_STARTED\"] = \"okx-ton-connect-connection-started\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_COMPLETED\"] = \"okx-ton-connect-connection-completed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_ERROR\"] = \"okx-ton-connect-connection-error\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_STARTED\"] = \"okx-ton-connect-connection-restoring-started\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_COMPLETED\"] = \"okx-ton-connect-connection-restoring-completed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_ERROR\"] = \"okx-ton-connect-connection-restoring-error\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_DISCONNECTION\"] = \"okx-ton-connect-disconnection\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SENT_FOR_SIGNATURE\"] = \"okx-ton-connect-transaction-sent-for-signature\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SIGNED\"] = \"okx-ton-connect-transaction-signed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SIGNING_FAILED\"] = \"okx-ton-connect-transaction-signing-failed\";\n})(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT || (exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRequestVersionEvent = createRequestVersionEvent;\nexports.createResponseVersionEvent = createResponseVersionEvent;\nexports.createVersionInfo = createVersionInfo;\nexports.createConnectionStartedEvent = createConnectionStartedEvent;\nexports.createConnectionDeepLinkEvent = createConnectionDeepLinkEvent;\nexports.createConnectionInfoBeforeJumpEvent = createConnectionInfoBeforeJumpEvent;\nexports.createConnectionCompletedEvent = createConnectionCompletedEvent;\nexports.createConnectionErrorEvent = createConnectionErrorEvent;\nexports.createConnectionRestoringStartedEvent = createConnectionRestoringStartedEvent;\nexports.createConnectionRestoringCompletedEvent = createConnectionRestoringCompletedEvent;\nexports.createConnectionRestoringErrorEvent = createConnectionRestoringErrorEvent;\nexports.createTransactionSentForSignatureEvent = createTransactionSentForSignatureEvent;\nexports.createTransactionSignedEvent = createTransactionSignedEvent;\nexports.createTransactionSigningFailedEvent = createTransactionSigningFailedEvent;\nexports.createDisconnectionEvent = createDisconnectionEvent;\n/**\n * Create a request version event.\n */\nfunction createRequestVersionEvent() {\n    return {\n        type: 'request-version'\n    };\n}\n/**\n * Create a response version event.\n * @param version\n */\nfunction createResponseVersionEvent(version) {\n    return {\n        type: 'response-version',\n        version: version\n    };\n}\n/**\n * Create a version info.\n * @param version\n */\nfunction createVersionInfo(version) {\n    return {\n        okx_ton_connect_sdk_lib: version.okx_ton_connect_sdk_lib,\n        okx_connect_ui_lib: version.okx_connect_ui_lib\n    };\n}\nfunction createConnectionInfo(version, wallet) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const isTonProof = ((_a = wallet === null || wallet === void 0 ? void 0 : wallet.connectItems) === null || _a === void 0 ? void 0 : _a.tonProof) && 'proof' in wallet.connectItems.tonProof;\n    const authType = isTonProof ? 'ton_proof' : 'ton_addr';\n    return {\n        wallet_address: (_c = (_b = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _b === void 0 ? void 0 : _b.address) !== null && _c !== void 0 ? _c : null,\n        wallet_type: (_d = wallet === null || wallet === void 0 ? void 0 : wallet.device.appName) !== null && _d !== void 0 ? _d : null,\n        wallet_version: (_e = wallet === null || wallet === void 0 ? void 0 : wallet.device.appVersion) !== null && _e !== void 0 ? _e : null,\n        auth_type: authType,\n        custom_data: Object.assign({ chain_id: (_g = (_f = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _f === void 0 ? void 0 : _f.chain) !== null && _g !== void 0 ? _g : null, provider: (_h = wallet === null || wallet === void 0 ? void 0 : wallet.provider) !== null && _h !== void 0 ? _h : null }, createVersionInfo(version))\n    };\n}\n/**\n * Create a connection init event.\n */\nfunction createConnectionStartedEvent(version) {\n    return {\n        type: 'connection-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection init event.\n */\nfunction createConnectionDeepLinkEvent(deeplinkUrl) {\n    return {\n        type: 'connection-get-deeplink',\n        deeplinkUrl: deeplinkUrl,\n    };\n}\n// okx-ton-connect-connection-info-before-jump\nfunction createConnectionInfoBeforeJumpEvent(connectInfo) {\n    return {\n        type: 'connection-info-before-jump',\n        connectInfo: connectInfo,\n    };\n}\n/**\n * Create a connection completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection error event.\n * @param version\n * @param error_message\n * @param errorCode\n */\nfunction createConnectionErrorEvent(version, error_message, errorCode) {\n    return {\n        type: 'connection-error',\n        is_success: false,\n        error_message: error_message,\n        error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null,\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring started event.\n */\nfunction createConnectionRestoringStartedEvent(version) {\n    return {\n        type: 'connection-restoring-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionRestoringCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-restoring-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection restoring error event.\n * @param version\n * @param errorMessage\n */\nfunction createConnectionRestoringErrorEvent(version, errorMessage) {\n    return {\n        type: 'connection-restoring-error',\n        is_success: false,\n        error_message: errorMessage,\n        custom_data: createVersionInfo(version)\n    };\n}\nfunction createTransactionInfo(wallet, transaction) {\n    var _a, _b, _c, _d;\n    return {\n        valid_until: (_a = String(transaction.validUntil)) !== null && _a !== void 0 ? _a : null,\n        from: (_d = (_b = transaction.from) !== null && _b !== void 0 ? _b : (_c = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _c === void 0 ? void 0 : _c.address) !== null && _d !== void 0 ? _d : null,\n        messages: transaction.messages.map(message => {\n            var _a, _b;\n            return ({\n                address: (_a = message.address) !== null && _a !== void 0 ? _a : null,\n                amount: (_b = message.amount) !== null && _b !== void 0 ? _b : null\n            });\n        })\n    };\n}\n/**\n * Create a transaction init event.\n * @param version\n * @param wallet\n * @param transaction\n */\nfunction createTransactionSentForSignatureEvent(version, wallet, transaction) {\n    return Object.assign(Object.assign({ type: 'transaction-sent-for-signature' }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction signed event.\n * @param version\n * @param wallet\n * @param transaction\n * @param signedTransaction\n */\nfunction createTransactionSignedEvent(version, wallet, transaction, signedTransaction) {\n    return Object.assign(Object.assign({ type: 'transaction-signed', is_success: true, signed_transaction: signedTransaction.boc }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction error event.\n * @param version\n * @param wallet\n * @param transaction\n * @param errorMessage\n * @param errorCode\n */\nfunction createTransactionSigningFailedEvent(version, wallet, transaction, errorMessage, errorCode) {\n    return Object.assign(Object.assign({ type: 'transaction-signing-failed', is_success: false, error_message: errorMessage, error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a disconnect event.\n * @param version\n * @param wallet\n * @param scope\n * @returns\n */\nfunction createDisconnectionEvent(version, wallet, scope) {\n    return Object.assign({ type: 'disconnection', scope: scope }, createConnectionInfo(version, wallet));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = toUserFriendlyAddress;\nconst core_1 = require(\"@okxconnect/core\");\nconst noBounceableTag = 0x51;\nconst testOnlyTag = 0x80;\n/**\n * Converts raw TON address to no-bounceable user-friendly format. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n * @param hexAddress raw TON address formatted as \"0:<hex string without 0x>\".\n * @param [testOnly=false] convert address to test-only form. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n */\nfunction toUserFriendlyAddress(hexAddress, testOnly = false) {\n    const { wc, hex } = parseHexAddress(hexAddress);\n    let tag = noBounceableTag;\n    if (testOnly) {\n        tag |= testOnlyTag;\n    }\n    const addr = new Int8Array(34);\n    addr[0] = tag;\n    addr[1] = wc;\n    addr.set(hex, 2);\n    const addressWithChecksum = new Uint8Array(36);\n    addressWithChecksum.set(addr);\n    addressWithChecksum.set(crc16(addr), 34);\n    // let addressBase64 = Base64.encode(addressWithChecksum);\n    let addressBase64 = (0, core_1.base64encode)(addressWithChecksum, false);\n    return addressBase64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction parseHexAddress(hexAddress) {\n    if (!hexAddress.includes(':')) {\n        throw new Error(`Wrong address ${hexAddress}. Address must include \":\".`);\n    }\n    const parts = hexAddress.split(':');\n    if (parts.length !== 2) {\n        throw new Error(`Wrong address ${hexAddress}. Address must include \":\" only once.`);\n    }\n    const wc = parseInt(parts[0]);\n    if (wc !== 0 && wc !== -1) {\n        throw new Error(`Wrong address ${hexAddress}. WC must be eq 0 or -1, but ${wc} received.`);\n    }\n    const hex = parts[1];\n    if ((hex === null || hex === void 0 ? void 0 : hex.length) !== 64) {\n        throw new Error(`Wrong address ${hexAddress}. Hex part must be 64bytes length, but ${hex === null || hex === void 0 ? void 0 : hex.length} received.`);\n    }\n    return {\n        wc,\n        hex: hexToBytes(hex)\n    };\n}\nfunction crc16(data) {\n    const poly = 0x1021;\n    let reg = 0;\n    const message = new Uint8Array(data.length + 2);\n    message.set(data);\n    for (let byte of message) {\n        let mask = 0x80;\n        while (mask > 0) {\n            reg <<= 1;\n            if (byte & mask) {\n                reg += 1;\n            }\n            mask >>= 1;\n            if (reg > 0xffff) {\n                reg &= 0xffff;\n                reg ^= poly;\n            }\n        }\n    }\n    return new Uint8Array([Math.floor(reg / 256), reg % 256]);\n}\nconst toByteMap = {};\nfor (let ord = 0; ord <= 0xff; ord++) {\n    let s = ord.toString(16);\n    if (s.length < 2) {\n        s = '0' + s;\n    }\n    toByteMap[s] = ord;\n}\nfunction hexToBytes(hex) {\n    hex = hex.toLowerCase();\n    const length2 = hex.length;\n    if (length2 % 2 !== 0) {\n        throw new Error('Hex string must have length a multiple of 2: ' + hex);\n    }\n    const length = length2 / 2;\n    const result = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        const doubled = i * 2;\n        const hexSubstring = hex.substring(doubled, doubled + 2);\n        if (!toByteMap.hasOwnProperty(hexSubstring)) {\n            throw new Error('Invalid hex character: ' + hexSubstring);\n        }\n        result[i] = toByteMap[hexSubstring];\n    }\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTON_STORAGE_PREFIX = exports.OKXCONNECTOR_TON_KEY = exports.OKXtonConnectSdkVersion = void 0;\nexports.OKXtonConnectSdkVersion = '1';\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXTON_STORAGE_PREFIX = \"_okxton\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkSendTransactionSupport = checkSendTransactionSupport;\nconst core_1 = require(\"@okxconnect/core\");\nfunction checkSendTransactionSupport(features, options) {\n    const supportsDeprecatedSendTransactionFeature = features.includes('ton_sendTransaction');\n    if (!supportsDeprecatedSendTransactionFeature) {\n        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support SendTransaction feature.\");\n    }\n    if (4 < options.requiredMessagesNumber) {\n        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `Wallet is not able to handle such SendTransaction request. Max support messages number is ${4}, but ${options.requiredMessagesNumber} is required.`);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = exports.removeUrlLastSlash = exports.addPathToUrl = void 0;\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"addPathToUrl\", { enumerable: true, get: function () { return url_1.addPathToUrl; } });\nObject.defineProperty(exports, \"removeUrlLastSlash\", { enumerable: true, get: function () { return url_1.removeUrlLastSlash; } });\nvar address_1 = require(\"./address\");\nObject.defineProperty(exports, \"toUserFriendlyAddress\", { enumerable: true, get: function () { return address_1.toUserFriendlyAddress; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\n","\n<template>\n\n    <div id=\"app\">\n      <el-container>\n        <el-header>OKX Connect</el-header>\n\n\n        <el-main>\n          <!-- 钱包信息 -->\n          <el-card class=\"wallet-info\">\n            <template #header>\n              <div>钱包信息</div>\n            </template>\n            <el-row class=\"info-row\">\n              <el-col :span=\"24\">\n                <strong>Wallet Address:</strong> {{ getWalletAddress }}\n              </el-col>\n            </el-row>\n\n            <el-row class=\"info-row\">\n              <el-col :span=\"24\">\n                <strong>当前状态 :</strong> {{ currentStatus }}\n              </el-col>\n            </el-row>\n\n            <!--          <el-row class=\"info-row\">-->\n            <!--            <el-col :span=\"24\">-->\n            <!--              <strong>Universal Link:</strong> {{ updateUniLink }}-->\n            <!--            </el-col>-->\n            <!--          </el-row>-->\n          </el-card>\n\n\n          <!-- 连接钱包 -->\n          <el-card class=\"wallet-actions\">\n            <template #header>\n              <div>钱包操作</div>\n            </template>\n\n            <el-row class=\"info-row\">\n              <el-col :span=\"24\">\n                <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">是否展示UI</el-checkbox>\n              </el-col>\n            </el-row>\n\n            <el-row style=\"align-items: center; justify-content: space-between;\">\n              <el-col :span=\"4\" style=\"gap: 2px\">\n                <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n                <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-select\n                    v-model=\"returnStrategy\"\n                    @change=\"handleReturnStrategySelect\"\n                    placeholder=\"Return Strategy\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"returnStrategy === 'deeplink'\"\n                    v-model=\"deeplink\"\n                    @change=\"handleReturnStrategyDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"returnStrategy !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n\n            <el-row :gutter=\"12\">\n              <el-col :span=\"24\">\n                <el-input v-model=\"testProofPayload\" placeholder=\"proofPayload\"></el-input>\n              </el-col>\n            </el-row>\n            <!--          <el-row class=\"info-row\">-->\n            <!--            <el-col :span=\"24\">-->\n            <!--              <el-checkbox v-model=isChecked @change=\"handleChange\"> 自动重连</el-checkbox>-->\n            <!--            </el-col>-->\n            <!--          </el-row>-->\n            <el-row class=\"info-row\" v-if=\"showVerifyRow\">\n              <el-col :span=\"24\" >\n                <strong>签名验证:</strong> {{ ProofPayloadVerify }}\n              </el-col>\n            </el-row>\n\n            <el-row :gutter=\"12\" class=\"button-row\">\n              <el-col :span=\"24\">\n                <el-button type=\"warning\" @click=\"walletInit\" icon=\"el-icon-refresh-right\">钱包初始化</el-button>\n              </el-col>\n            </el-row>\n\n            <el-row :gutter=\"12\" class=\"button-row\">\n              <el-col :span=\"24\">\n                <el-button type=\"primary\" @click=\"connectBtnClicked\" icon=\"el-icon-connection\">{{ connectStatusStr }}</el-button>\n              </el-col>\n            </el-row>\n\n            <teleport to=\"body\">\n              <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n                <div class=\"modal-content\" @click.stop>\n                  <button class=\"close-button\" @click=\"closeModal\">&times;</button>\n                  <h2>扫描二维码</h2>\n                  <qrcode-vue :value=\"qrValue\" :size=\"200\" level=\"H\" />\n                </div>\n              </div>\n            </teleport>\n\n            <el-row :gutter=\"12\" class=\"button-row\">\n              <el-col :span=\"24\">\n                <el-button type=\"warning\" @click=\"resotreConnectAction\" icon=\"el-icon-refresh-right\">尝试重连</el-button>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"12\"  class=\"button-row\">\n              <el-col :span=\"24\">\n                <el-button type=\"danger\" @click=\"disconnectAction\" icon=\"el-icon-switch-button\" :disabled=\"walletAddress.length == 0\">{{ disconnectStatusStr }}</el-button>\n              </el-col>\n            </el-row>\n          </el-card>\n\n          <!-- 发送交易 -->\n          <el-card class=\"transaction\">\n            <template #header>\n              <div>交易</div>\n            </template>\n\n            <el-row :gutter=\"12\">\n              <el-col  :span=\"8\">\n                <el-button type=\"primary\" @click=\"mockSwap()\">swap</el-button>\n              </el-col>\n              <el-col  :span=\"8\">\n                <el-button type=\"success\" @click=\"mockTransaction()\">转账</el-button>\n              </el-col>\n              <!--            <el-col  :span=\"8\">-->\n              <!--              <el-button type=\"warning\" @click=\"mockTransactionNFT()\">转移NFT</el-button>-->\n              <!--            </el-col>-->\n            </el-row>\n\n            <el-col :xs=\"24\" :sm=\"12\">\n              <div class=\"input-label\">交易数据:</div>\n              <el-input v-model=\"testTransaction\" placeholder=\"sendTransactions\"></el-input>\n            </el-col>\n            <el-col :xs=\"24\" :sm=\"12\">\n              <div class=\"input-label\">签名结果 :</div>\n              <el-input v-model=\"testboc\" placeholder=\"boc\"></el-input>\n            </el-col>\n            <el-row :gutter=\"12\" class=\"button-row\">\n              <el-col :span=\"24\">\n                <el-button type=\"primary\" @click=\"sendTransaction()\">{{ testTransactionStr }}</el-button>\n              </el-col>\n            </el-row>\n          </el-card>\n\n          <!-- 本地加解密KeyPair -->\n          <!-- <el-card class=\"keypair-info\">\n            <template #header>\n              <div>本地加解密KeyPair</div>\n            </template>\n            <el-row :gutter=\"12\">\n              <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"input-label\">PubKey:</div>\n                <el-input v-model=\"localPubKey\" placeholder=\"PublicKey\" disabled></el-input>\n              </el-col>\n              <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"input-label\">SecKey:</div>\n                <el-input v-model=\"localSecKey\" placeholder=\"SecretKey\" disabled></el-input>\n              </el-col>\n            </el-row>\n          </el-card> -->\n\n          <!-- 清理缓存 -->\n          <!-- <el-card class=\"clear-cache\">\n            <el-row>\n              <el-col :span=\"24\">\n                <el-button type=\"danger\" @click=\"clearCacheKeyPair()\" icon=\"el-icon-delete\">清理本地缓存</el-button>\n              </el-col>\n            </el-row>\n          </el-card> -->\n        </el-main>\n      </el-container>\n\n    </div>\n    <div id=\"button-root\"></div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody, html {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto; /* 居中 */\n  max-width: 600px; /* 设置最大宽度 */\n  padding: 0 20px; /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n#button-root1 {\n  align-self: flex-end; /* 该元素会靠右对齐 */\n  margin-top: 80px;\n  margin-right: 20px;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px; /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 300px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES,OKXTonConnect,\n  OKX_TON_CONNECTION_AND_TRANSACTION_EVENT} from \"@okxconnect/tonsdk\"\nimport { OKXTonConnectUI, THEME } from \"@okxconnect/ui\";\n\n\nimport QrcodeVue from 'qrcode.vue'\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n\nexport default {\n  name: 'App',\n  components: {\n    QrcodeVue\n  },\n  data: ()=> {\n    return {\n      testTopic: '',\n      testPublicKey: '',\n      testProofPayload: '',\n      pendingDeepLink: '-',\n      logList: [],\n      connectReady: false,\n      connectStatusStr: '连接钱包',\n      disconnectStatusStr: '断开钱包',\n      localPubKey: '',\n      localSecKey: '',\n      testTransaction:'',\n      testTransactionStr:'发送交易',\n      walletAddress:'',\n      testboc:'',\n      ProofPayloadVerify:'',\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: 'https://www.okx.com/download',\n      currentStatus:\"\",\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      withUI: localStorage.getItem(\"autoRefresh\") == \"true\",\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      // isChecked:localStorage.getItem(\"autoRefresh\") == \"true\",\n      // handleChange:(isChecked) => {\n      //   localStorage.setItem(\"autoRefresh\",`${isChecked}`)\n      // }\n    }\n  },\n  computed: {\n    getWalletAddress:function (){\n      return this.walletAddress;\n    },\n\n\n  },\n  methods: {\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n        this.testTonSdk();\n    },\n\n    async disconnectAction() {\n      try {\n        console.log('get disconnect wallet btn clicked');\n        await window.provider.disconnect();\n      } catch (error) {\n        console.log('Disconnect  error ==>> ',error.message);\n        this.currentStatus = error.message;\n      }\n    },\n    async walletInit() {\n      var TON;\n      if (!this.withUI) {\n        console.log('---init wallet---');\n        TON = new OKXTonConnect({\n          metaData:{\n            name:\"OKX TON Connect Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\"\n          }})\n      } else {\n        console.log('---init wallet UI--');\n        TON = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX TON Connect Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          buttonRootId: 'button-root',\n          language: 'en_US',\n        });\n      }\n      window.tonTest = TON;\n    },\n\n    async resotreConnectAction() {\n      console.log('get restore wallet btn clicked');\n      window.provider.restoreConnection();\n    },\n    // clearCacheKeyPair: () => {\n    //   console.log(`generate local key pair`)\n    //   testCM.cleanCache()\n    //   // testTonSdk()\n    //\n    // },\n\n    async mockSwap(){\n      var data =  {\"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\"validUntil\":1792481054,\"network\":-239}\n      this.testTransaction = JSON.stringify(data)\n    },\n    async mockTransaction(){\n     let account = window.provider.account;\n      let address =  account.address\n      var data  = {\"messages\":[{\"address\":\"UQDXlIPZgiC7ugBqdg68ZQ4zBVGaTEfTQd1ywCDB8exACtQK\",\"amount\":1100000}],\n        \"valid_until\":1792481054,\n        \"from\":address,\n        \"network\":\"-239\"}\n      this.testTransaction = JSON.stringify(data)\n    },\n    async mockTransactionNFT(){\n      var data = {\"from\":\"EQD8Szz0MFehPG6rFUXHIFvO31Fq_YcFQqXuGaS8u4ocsMqN\",\"messages\":[{\"address\":\"EQBpDpRrE3b4g01AXoyCQbnUGTpVCCgCBGyTPWvKvwDyQKqZ\",\"amount\":\"20000000\",\"payload\":\"te6cckEBAQEAUwAAoV/MPRQAAAAAAAAAAIAa8pB7MEQXd0ANTsHXjKHGYKozSYj6aDuuWAQYPj2IAVAD8Szz0MFehPG6rFUXHIFvO31Fq/YcFQqXuGaS8u4ocsAgKGBCo0E=\"}],\"valid_until\":1792481054,\"network\":\"-239\"}\n      this.testTransaction = JSON.stringify(data)\n    },\n    async sendTransaction(){\n\n\n      console.log('sendTransaction')\n      console.log('sendTransaction内容------',this.testTransaction)\n      if (this.testTransaction) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction)\n        try {\n          var result = await window.provider.sendTransaction(sendData)\n          this.testboc = result.boc\n        } catch (error) {\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = \"用户拒绝交易\"\n          } else {\n            this.testboc = \"签名错误！\"\n          }\n        }\n      } else {\n        alert(\"交易数据为空，请选则或输入交易数据。\")\n      }\n    },\n\n    async testTonSdk(){\n      if (window.provider.connected){\n        console.log('you have connected wallet');\n      }else {\n        console.log('APP ---connect Proof--->>>>----',this.testProofPayload);\n        let connectData = {\n          tonProof:this.testProofPayload,\n          redirect:\"tg://resolve\",\n          tmaReturnUrl:\"tg://resolve\",\n        };\n\n        if (this.isPC()) {\n          if (this.isSafariOrChrome() && !window?.TelegramWebview && !window?.TelegramWebviewProxy){\n            connectData.redirect = null;\n          }\n          console.log('Is Mobile ==>',connectData);\n\n        }else {\n          if (this.isSafariOrChrome() && !window?.TelegramWebview && !window?.TelegramWebviewProxy){\n            connectData.redirect = null;\n          }\n          console.log('Is Mobile ==>',connectData);\n        }\n\n        if (window.provider instanceof OKXTonConnectUI) {\n          if (this.testProofPayload){\n            window.provider.setConnectRequestParameters({\n              state: \"ready\",\n              value: {tonProof:this.testProofPayload}\n            });\n          }\n          await window.provider.openModal().catch(\n            (error) => console.error(\"发生了错误：\", error));\n        } else if(window.provider instanceof OKXTonConnect)  {\n           window.provider.connect(connectData).then((url)=>{\n             console.log(\"Current Url ---:\",url)\n             if (url && this.isPC()){\n               this.qrValue = url;\n               this.showModal = true;\n             }\n           });\n        }\n      }\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent\n      console.log('current device ua is ===>',userAgentInfo)\n\n      const Agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"]\n      let flag = true\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false\n          break\n        }\n      }\n      return flag\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent\n      const Agents = [\"Safari\", \"Chrome\"]\n      let flag = false\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true\n          break\n        }\n      }\n      return flag\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      console.log('handleReturnStrat', window.provider);\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\"\n          },\n          buttonRootId: 'button-root',\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log(window.provider);\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: \"all\"\n          },\n          buttonRootId: 'button-root',\n        };\n      }\n    }\n  },\n  created() {\n\n    for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n      console.log(eventName);\n      window.addEventListener(eventName, (event) => {\n        console.log(eventName,event.detail)\n        this.currentStatus = eventName\n      });\n    }\n\n    window.addEventListener(\"okx-ton-connect-connection-info-before-jump\", (event) => {\n      console.log(\"链接详情   :::\",event.detail)\n    });\n\n  },\n\n  mounted() {\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n    window.okxLogDebug = true\n    this.connectReady = true\n\n    document.title = \"OKX Connect TON\";\n    var TON;\n    if (!this.withUI) {\n      console.log('---init wallet------');\n\n      TON = new OKXTonConnect({\n        metaData:{\n        name:\"OKX TON Connect Demo\",\n        icon: \"https://avatars.githubusercontent.com/u/37784886\"\n      }})\n\n    } else {\n      console.log('---init wallet UI--');\n      TON = new OKXTonConnectUI({\n        dappMetaData: {\n          name: \"OKX TON Connect Demo\",\n          icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n        },\n        actionsConfiguration: {\n          returnStrategy: 'tg://resolve',\n          tmaReturnUrl:'back',\n          modals: \"all\",\n        },\n        uiPreferences: {\n          theme: THEME.LIGHT\n        },\n        buttonRootId: 'button-root',\n        language: 'en_US',\n      });\n    }\n      window.provider = TON;\n      \n    window.provider.onStatusChange((walletInfo) => {\n      console.log('APP ---TON.onStatusChange>>----', walletInfo);\n          if (walletInfo) {\n            this.walletAddress = walletInfo.account.address;\n            if (this.testProofPayload) {\n              var checkProofData = {\n                address: this.walletAddress,\n                network: walletInfo.account.chain,\n                public_key:walletInfo.account.publicKey,\n                proof:{\n                  ... walletInfo.connectItems.tonProof.proof,\n                  state_init: walletInfo.account.walletStateInit\n                }\n              }\n              console.log(`checkProof => ${JSON.stringify(checkProofData)}`)\n\n            } else {\n              this.ProofPayloadVerify = \": no proof\";\n            }\n            this.showModal = false;\n\n          } else {\n            this.walletAddress = \"disconnected\";\n          }\n        }, (error) => {\n          this.showModal = false;\n      if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR){\n        this.walletAddress = `用户拒绝链接: code(${error.code}) `;\n      }else {\n        this.walletAddress = `链接报错: code(${error.code})  ${error.message}`;\n      }\n        }\n    )\n\n  }\n}\n</script>","import { render } from \"./App.vue?vue&type=template&id=aad3e5d2&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=aad3e5d2&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-aad3e5d2\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9277); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_RECV_DISCONNECT","CONNECT_METHOD_DISCONNECT","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","length","mod","result","i","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","report_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectorEnable","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","error","clearCache","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","method","updateExpireLimit","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","forEach","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","name","timeF","sendFetchAndConsumeMessages","init","sendRaw","checkExpired","checkExpire","activateDisconnect","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","token","replace","parsedMessage","sendDisconnect","ttl","OKXCONNECTOR_MESSAGE_DISCONNECT_TTL","sendRecvDisconnect","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","startsWith","inputDataObj","msgResult","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","disconnectedTopics","topicInfo","disconnectPayload","requestId","disconnectMsg","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","isExpired","topicExpireCache","OKXCONNECTOR_STORAGE_TOPIC_EXPIRE_CACHE","lastTopic","timestamp","saveExpireItem","OKXCONNECTOR_SESSION_LIVE_TTL","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","size","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","push","slice","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","Array","index_check","Set","add","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","filter","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","request","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","connectInfo","openUniversalLink","openUniversalUrl","linkType","openAppLinkType","OpenAppLinkType","UniversalLink","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","fixDappName","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","universalLink","deepLink","linkInfo","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","namespaces","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","session","assign","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","deviceInfo","setUseConnector","PAGE_IN","Report_OKXConnectSDKExtension_ConnectDapp_ConnectSuccess_View","sendSession","toLowerCase","title","getOGSiteName","metas","getElementsByTagName","objectTitleList","meta","property","getAttribute","objectTitle","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","chainId","Report_OKXConnectSDK_RequestStart_Log","platform","Report_OKXConnectSDK_RequestError_Log","Report_OKXConnectSDK_RequestSuccess_Log","onAck","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","accounts","filterAccount","namespace","ton_addr","address","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_TOPIC_WALLET_EXPIRE_CACHE","OKXCONNECTOR_STORAGE_CIPHER_METHOD","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","from","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","topicExpireMap","lastTimestamp","cacheMapCache","expireTimestamp","fromEntries","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","lineType","localConnectRequest","useShortLink","isOS","openDeeplinkWithFallback","stackDeepLink","standardDeeplink","shortUniversalLink","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","btc_provider_1","disconnectListener","providerMap","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","NameSpaceKeyAptos","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","NameSpaceKeyBtc","BtcProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","window","okxwallet","requestAccounts","version","getVersion","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","console","getRequestId","newRequest","checkWalletMatch","injectProvider","getNamespaceKeyByChain","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceChainNameToChainId","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","provider","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","stored","NOT_CONNECTED_ERROR","localAddress","connection","parse","localItem","connectEvent","items","TON_CHAINS","MAINNET","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","okxTonWallet","tonconnect","restoreConnection","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","injectParams","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","path","_provider","BtcMethods","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptosChainList","freeze","aptosInjectChainMap","aptos","searchNetwork","searchChainIdToInjectChainName","signMessage","injectResult","signTransaction","signAndSubmitTransaction","hash","METHOD_NOT_SUPPORTED","chainName","accountChange","connectRequestWalletResponse","connectChain","aptosAccount","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","onAccountChange","newAccount","bs58_1","accountChangedSolanaPublicKeyHandler","signedMessage","solana","bufferResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","needProof","accountChangedBtcHandler","unisat","switchChain","BTC_CHAINS","FRACTAL","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","signStr","type","to","satBytes","psbtHexs","options","signatures","isArray","signPsbt","signPsbts","psbtHex","signedPsbt","pushPsbt","txHash","inscriptionId","sendInscription","hasFunction","ticker","amount","inscribeTransfer","runeid","sendRunes","functionName","itemNameSpace","accountChangedEVMHandler","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","sui","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","NAMES_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","misc_1","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","values","NameSpaceKeyCosmos","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","downloadUrl","standardUniversalLink","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","chains_1","callForSuccess","fn","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","chainName2IdMap","replaceChainIdToChainName","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","logVersion","debug","forceReport","defaultReporter","OKXReporter","packageJson","args","okxLogDebug","sendRecordContent","warn","type_1","action_1","content_1","action","reverved1","reverved2","reverved3","reverved4","reverved5","reverved6","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","Report_WalletType_Key","Report_OKXConnectSDKExtension_ConnectDapp_Button_Click","Report_OKXConnectSDKExtension_Module_Retry_Click","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_OKXConnectSDKExtension_ConnectDapp_Page_View","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","hex","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","shouldFallback","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","iosUseDeeplink","isInIOSChrome","isInIOSLine","isInIOSLark","isInIOSWeChat","href","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","shortUniversalLinkResult","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","deviceModel","model","browserName","browser","toUserFriendlyAddress","createVersionInfo","BrowserEventDispatcher","createTransactionSigningFailedEvent","createTransactionSignedEvent","createTransactionSentForSignatureEvent","createDisconnectionEvent","createConnectionStartedEvent","createConnectionRestoringStartedEvent","createConnectionRestoringErrorEvent","createConnectionRestoringCompletedEvent","createConnectionErrorEvent","createConnectionCompletedEvent","createResponseVersionEvent","createRequestVersionEvent","OKX_TON_CONNECTION_AND_TRANSACTION_EVENT","OKXTonConnect","okx_connect_ton_1","tracker_1","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","OKXTonConnectInner","bridge_provider_1","core_1","feature_support_1","ton_connect_tracker_1","send_transaction_parser_1","bridge_connection_storage_1","_wallet","statusChangeSubscriptions","statusChangeErrorSubscriptions","metaData","dappSettings","tracker","TonConnectTracker","OKXtonConnectSdkVersion","OKXTON_STORAGE_PREFIX","bridgeConnectionStorage","BridgeConnectionStorage","connected","account","closeConnection","BridgeProvider","listen","walletEventsListener","trackConnectionStarted","createConnectRequest","onWalletConnected","onWalletConnectError","onWalletDisconnected","tonAccountItem","tonProofItem","walletStateInit","connectItems","trackConnectionCompleted","connectEventError","errorsHandler","trackConnectionError","scope","trackDisconnection","onStatusChange","trackConnectionRestoringStarted","fromStorage","trackConnectionRestoringError","removeConnection","trackConnectionRestoringCompleted","sendTransaction","transaction","checkConnection","checkSendTransactionSupport","requiredMessagesNumber","messages","trackTransactionSentForSignature","validUntil","tx","doNotOpenWallet","openOKXWallet","sendRequest","sendTransactionParser","convertToRpcRequest","valid_until","onRequestSent","isError","trackTransactionSigningFailed","convertFromRpcResponse","trackTransactionSigned","getWallets","walletsList","okx_connect_ton_inner_1","okxConnectTonsdkinwindow","tonInner","RpcParser","rpc_parser_1","SendTransactionParser","rpcResponse","boc","storeConnection","getConnection","getHttpConnection","storeLastWalletEventId","lastWalletEventId","getLastWalletEventId","bridge_connection_1","listeners","walletConnectionSource","engine","connectionStorage","isPendingConnectionHttp","isCryptoEnable","cryptoEnable","tonNameSpace","tonRequest","engineRequest","config","universalUrl","trackConnectionInfoBeforeJump","connectSuccessHandle","errorMessage","disconnectMessage","itemArr","tonDeviceInfo","tonConnectInfo","connectionSource","successMessage","needOpenUrl","storedConnection","storedWalletName","storedWalletTag","isInjectWallet","called","connectorOpenWallet","dispatchEvent","eventName","eventDetails","CustomEvent","detail","tracker_constants_1","types_1","browser_event_dispatcher_1","okx_ton_connect_sdk_lib","okx_connect_ui_lib","OKXConnectUiVersion","eventPrefix","eventDispatcher","setRequestVersionHandler","requestTonConnectUiVersion","dispatchUserActionEvent","trackConnectionDeepLink","createConnectionDeepLinkEvent","createConnectionInfoBeforeJumpEvent","createConnectionInfo","isTonProof","authType","wallet_address","wallet_type","wallet_version","auth_type","custom_data","chain_id","is_success","error_message","errorCode","error_code","createTransactionInfo","signedTransaction","signed_transaction","noBounceableTag","testOnlyTag","hexAddress","testOnly","wc","parseHexAddress","addr","Int8Array","addressWithChecksum","crc16","addressBase64","parts","hexToBytes","poly","reg","mask","toByteMap","ord","length2","doubled","hexSubstring","supportsDeprecatedSendTransactionFeature","address_1","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","style","_component_el_select","returnStrategy","handleReturnStrategySelect","placeholder","_renderList","returnStrategies","strategy","_createBlock","_component_el_option","label","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","gutter","testProofPayload","showVerifyRow","ProofPayloadVerify","_component_el_button","onClick","walletInit","icon","connectBtnClicked","connectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","resotreConnectAction","disconnectAction","walletAddress","disconnectStatusStr","mockSwap","mockTransaction","xs","sm","testTransaction","testboc","testTransactionStr","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","THEME","LIGHT","components","QrcodeVue","testTopic","testPublicKey","pendingDeepLink","logList","localPubKey","localSecKey","theme","isChecked","reload","computed","testTonSdk","TON","OKXTonConnectUI","actionsConfiguration","modals","uiPreferences","buttonRootId","tonTest","mockTransactionNFT","sendData","alert","connectData","isPC","isSafariOrChrome","setConnectRequestParameters","openModal","userAgentInfo","Agents","flag","uiOptions","created","mounted","scriptTag","createElement","src","appendChild","checkProofData","public_key","state_init","__exports__","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","definition","g","globalThis","Function","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}